/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/main_eki.cu -o objectfiles/src/main_eki.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/core/ldm.cu -o objectfiles/src/core/ldm.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/kernels/device/ldm_kernels_device.cu -o objectfiles/src/kernels/device/ldm_kernels_device.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/kernels/particle/ldm_kernels_particle.cu -o objectfiles/src/kernels/particle/ldm_kernels_particle.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/kernels/particle/ldm_kernels_particle_ens.cu -o objectfiles/src/kernels/particle/ldm_kernels_particle_ens.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/kernels/eki/ldm_kernels_eki.cu -o objectfiles/src/kernels/eki/ldm_kernels_eki.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/kernels/dump/ldm_kernels_dump.cu -o objectfiles/src/kernels/dump/ldm_kernels_dump.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/kernels/dump/ldm_kernels_dump_ens.cu -o objectfiles/src/kernels/dump/ldm_kernels_dump_ens.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/data/meteo/ldm_mdata_loading.cu -o objectfiles/src/data/meteo/ldm_mdata_loading.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/data/meteo/ldm_mdata_processing.cu -o objectfiles/src/data/meteo/ldm_mdata_processing.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/data/meteo/ldm_mdata_cache.cu -o objectfiles/src/data/meteo/ldm_mdata_cache.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/simulation/ldm_func_simulation.cu -o objectfiles/src/simulation/ldm_func_simulation.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/simulation/ldm_func_particle.cu -o objectfiles/src/simulation/ldm_func_particle.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/simulation/ldm_func_output.cu -o objectfiles/src/simulation/ldm_func_output.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/visualization/ldm_plot_vtk.cu -o objectfiles/src/visualization/ldm_plot_vtk.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/visualization/ldm_plot_utils.cu -o objectfiles/src/visualization/ldm_plot_utils.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/init/ldm_init_particles.cu -o objectfiles/src/init/ldm_init_particles.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/init/ldm_init_config.cu -o objectfiles/src/init/ldm_init_config.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/ipc/ldm_eki_writer.cu -o objectfiles/src/ipc/ldm_eki_writer.o
/usr/local/cuda/bin/nvcc -w -O2 -arch=sm_61 -I./src -I./src/include -I./src/kernels -I./src/kernels/cram -I./src/data/config -Xcompiler -fopenmp -lgomp -c src/physics/ldm_cram2.cu -o objectfiles/src/physics/ldm_cram2.o
src/physics/ldm_cram2.cuh(75): error: incomplete type "LDM" is not allowed
  bool LDM::load_A_csv(const char* path, std::vector<double>& A_out);
       ^

src/physics/ldm_cram2.cuh(94): error: incomplete type "LDM" is not allowed
  void LDM::gauss_solve_inplace(std::vector<double>& M, std::vector<double>& b, int n);
       ^

src/physics/ldm_cram2.cuh(130): error: incomplete type "LDM" is not allowed
  void LDM::cram48_expm_times_ej_host(const std::vector<double>& A,
       ^

src/physics/ldm_cram2.cuh(159): error: incomplete type "LDM" is not allowed
  bool LDM::build_T_matrix_and_upload(const char* A60_csv_path);
       ^

src/physics/ldm_cram2.cuh(178): error: incomplete type "LDM" is not allowed
  bool LDM::initialize_cram_system(const char* A60_csv_path);
       ^

src/kernels/dump/../device/ldm_kernels_device.cuh(104): error: identifier "curandState" is undefined
  __attribute__((device)) float getRand(curandState* states);
                                        ^

src/kernels/dump/../device/ldm_kernels_device.cuh(104): error: identifier "states" is undefined
  __attribute__((device)) float getRand(curandState* states);
                                                     ^

src/kernels/dump/../device/ldm_kernels_device.cuh(122): error: type name is not allowed
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                  ^

src/kernels/dump/../device/ldm_kernels_device.cuh(122): error: too many initializer values
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                  ^

src/kernels/dump/../device/ldm_kernels_device.cuh(122): error: expected a ")"
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                        ^

src/kernels/dump/../device/ldm_kernels_device.cuh(144): error: name followed by "::" must be a class or namespace name
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                  ^

src/kernels/dump/../device/ldm_kernels_device.cuh(144): error: incomplete type "void" is not allowed
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                               ^

src/kernels/dump/../device/ldm_kernels_device.cuh(144): error: identifier "d_part" is undefined
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                ^

src/kernels/dump/../device/ldm_kernels_device.cuh(144): error: type name is not allowed
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                        ^

src/kernels/dump/../device/ldm_kernels_device.cuh(144): error: expected a ")"
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                              ^

src/kernels/dump/../device/ldm_kernels_device.cuh(162): error: name followed by "::" must be a class or namespace name
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                     ^

src/kernels/dump/../device/ldm_kernels_device.cuh(162): error: incomplete type "void" is not allowed
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                               ^

src/kernels/dump/../device/ldm_kernels_device.cuh(162): error: type name is not allowed
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                                           ^

src/kernels/dump/../device/ldm_kernels_device.cuh(162): error: expected a ")"
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                                                 ^

src/kernels/dump/../device/ldm_kernels_device.cuh(184): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float activationRatio,
      ^

src/kernels/dump/../device/ldm_kernels_device.cuh(183): error: incomplete type "void" is not allowed
  __attribute__((global)) void update_particle_flags_ens(
                               ^

src/kernels/dump/../device/ldm_kernels_device.cuh(184): error: type name is not allowed
      LDM::LDMpart* d_part, float activationRatio,
                            ^

src/kernels/dump/../device/ldm_kernels_device.cuh(184): error: expected a ")"
      LDM::LDMpart* d_part, float activationRatio,
                                  ^

src/kernels/dump/ldm_kernels_dump.cuh(56): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
      ^

src/kernels/dump/ldm_kernels_dump.cuh(55): error: incomplete type "void" is not allowed
  __attribute__((global)) void move_part_by_wind_mpi_dump(
                               ^

src/kernels/dump/ldm_kernels_dump.cuh(56): error: type name is not allowed
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                            ^

src/kernels/dump/ldm_kernels_dump.cuh(56): error: expected a ")"
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                                  ^

src/kernels/dump/ldm_kernels_dump.cu(9): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
      ^

src/kernels/dump/ldm_kernels_dump.cu(8): error: variable "move_part_by_wind_mpi_dump" has already been defined (previous definition at line 55 of src/kernels/dump/ldm_kernels_dump.cuh)
  __attribute__((global)) void move_part_by_wind_mpi_dump(
                               ^

src/kernels/dump/ldm_kernels_dump.cu(8): error: incomplete type "void" is not allowed
  __attribute__((global)) void move_part_by_wind_mpi_dump(
                               ^

src/kernels/dump/ldm_kernels_dump.cu(9): error: type name is not allowed
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                            ^

src/kernels/dump/ldm_kernels_dump.cu(9): error: expected a ")"
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                                  ^

src/kernels/dump/ldm_kernels_dump.cu(13): error: expected a ";"
      FlexPres* device_meteorological_flex_pres1){
                                                 ^

src/kernels/dump/ldm_kernels_dump.cu(31): error: "curandState" is not a type name
          curandState ss;
          ^

src/kernels/dump/ldm_kernels_dump.cu(32): error: this declaration has no storage class or type specifier
          curand_init(seed, idx, 0, &ss);
          ^

src/kernels/dump/ldm_kernels_dump.cu(32): error: identifier "seed" is undefined
          curand_init(seed, idx, 0, &ss);
                      ^

src/kernels/dump/ldm_kernels_dump.cu(32): error: identifier "idx" is undefined
          curand_init(seed, idx, 0, &ss);
                            ^

src/kernels/dump/ldm_kernels_dump.cu(32): error: too many initializer values
          curand_init(seed, idx, 0, &ss);
                            ^

src/kernels/dump/ldm_kernels_dump.cu(36): error: expected a declaration
          if(p.x*0.5 -179.0 >= 180.0) {
          ^

src/kernels/dump/ldm_kernels_dump.cu(41): error: this declaration has no storage class or type specifier
          yidx = int(p.y);
          ^

src/kernels/dump/ldm_kernels_dump.cu(41): error: variable "yidx" has already been defined (previous definition at line 35)
          yidx = int(p.y);
          ^

src/kernels/dump/ldm_kernels_dump.cu(41): error: identifier "p" is undefined
          yidx = int(p.y);
                     ^

src/kernels/dump/ldm_kernels_dump.cu(44): error: declaration is incompatible with overloaded function "index" (declared at line 48 of /usr/include/strings.h)
          int index;
              ^

src/kernels/dump/ldm_kernels_dump.cu(49): error: expected a declaration
          for(int i=0; i<2; i++){
          ^

src/kernels/dump/ldm_kernels_dump.cu(61): error: expected a declaration
          for(int i=0; i<dimZ_GFS; i++){
          ^

src/kernels/dump/ldm_kernels_dump.cu(70): error: declaration is incompatible with overloaded function "y0" (declared at line 3089 of /usr/local/cuda/bin/../targets/x86_64-linux/include/crt/math_functions.h)
          float y0 = p.y-yidx;
                ^

src/kernels/dump/ldm_kernels_dump.cu(73): error: identifier "d_flex_hgt" is undefined
          float height_diff = d_flex_hgt[zidx+1] - d_flex_hgt[zidx];
                              ^

src/kernels/dump/ldm_kernels_dump.cu(75): error: expected a declaration
          if (abs(height_diff) < 1e-6f) {
          ^

src/kernels/dump/ldm_kernels_dump.cu(82): error: declaration is incompatible with overloaded function "y1" (declared at line 3143 of /usr/local/cuda/bin/../targets/x86_64-linux/include/crt/math_functions.h)
          float y1 = 1-y0;
                ^

src/kernels/dump/ldm_kernels_dump.cu(84): error: identifier "t0" is undefined
          float t1 = 1-t0;
                       ^

src/kernels/dump/ldm_kernels_dump.cu(88): error: identifier "x1" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                       ^

src/kernels/dump/ldm_kernels_dump.cu(88): error: identifier "device_meteorological_flex_unis0" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                                ^

src/kernels/dump/ldm_kernels_dump.cu(88): error: identifier "dimY_GFS" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                                                                          ^

src/kernels/dump/ldm_kernels_dump.cu(92): error: identifier "device_meteorological_flex_unis1" is undefined
                      +x1*y1*t0*device_meteorological_flex_unis1[(xidx) * dimY_GFS + (yidx)].USTR
                                ^

src/kernels/dump/ldm_kernels_dump.cu(115): error: this declaration has no storage class or type specifier
          obkl = 1/obkl;
          ^

src/kernels/dump/ldm_kernels_dump.cu(115): error: variable "obkl" has already been defined (previous definition at line 106)
          obkl = 1/obkl;
          ^

src/kernels/dump/ldm_kernels_dump.cu(155): error: identifier "device_meteorological_flex_pres0" is undefined
          float drho_000 = device_meteorological_flex_pres0[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].DRHO;
                           ^

src/kernels/dump/ldm_kernels_dump.cu(155): error: identifier "dimZ_GFS" is undefined
          float drho_000 = device_meteorological_flex_pres0[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].DRHO;
                                                                                ^

src/kernels/dump/ldm_kernels_dump.cu(158): error: expected a declaration
          if (idx == 0 && isnan(drho_000)) {
          ^

src/kernels/dump/ldm_kernels_dump.cu(183): error: identifier "drho_raw" is undefined
          float drho = isnan(drho_raw) ? 0.0f : drho_raw;
                             ^

src/kernels/dump/ldm_kernels_dump.cu(193): error: identifier "device_meteorological_flex_pres1" is undefined
                     +x1*y1*z1*t0*device_meteorological_flex_pres1[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].RHO
                                  ^

src/kernels/dump/ldm_kernels_dump.cu(203): error: identifier "FlexPres" is undefined
          FlexPres met_p0[8], met_p1[8];
          ^

src/kernels/dump/ldm_kernels_dump.cu(207): error: identifier "dimX_GFS" is undefined
          int safe_xidx = min(xidx, dimX_GFS - 2);
                                    ^

src/kernels/dump/ldm_kernels_dump.cu(211): error: variable "met_p0" is not a type name
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(211): error: invalid specifier for structured binding declaration
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(211): error: expected an identifier
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump.cu(211): error: expected a "]"
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump.cu(212): error: variable "met_p0" is not a type name
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(212): error: invalid specifier for structured binding declaration
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(212): error: expected an identifier
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump.cu(212): error: expected a "]"
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump.cu(213): error: variable "met_p0" is not a type name
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(213): error: invalid specifier for structured binding declaration
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(213): error: expected an identifier
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump.cu(213): error: expected a "]"
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump.cu(214): error: variable "met_p0" is not a type name
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(214): error: invalid specifier for structured binding declaration
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(214): error: expected an identifier
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump.cu(214): error: expected a "]"
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump.cu(215): error: variable "met_p0" is not a type name
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(215): error: invalid specifier for structured binding declaration
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(215): error: expected an identifier
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/dump/ldm_kernels_dump.cu(215): error: expected a "]"
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/dump/ldm_kernels_dump.cu(216): error: variable "met_p0" is not a type name
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(216): error: invalid specifier for structured binding declaration
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(216): error: expected an identifier
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/dump/ldm_kernels_dump.cu(216): error: expected a "]"
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/dump/ldm_kernels_dump.cu(217): error: variable "met_p0" is not a type name
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(217): error: invalid specifier for structured binding declaration
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(217): error: expected an identifier
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/dump/ldm_kernels_dump.cu(217): error: expected a "]"
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/dump/ldm_kernels_dump.cu(218): error: variable "met_p0" is not a type name
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(218): error: invalid specifier for structured binding declaration
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(218): error: expected an identifier
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/dump/ldm_kernels_dump.cu(218): error: expected a "]"
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/dump/ldm_kernels_dump.cu(220): error: variable "met_p1" is not a type name
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(220): error: invalid specifier for structured binding declaration
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(220): error: expected an identifier
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump.cu(220): error: expected a "]"
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump.cu(221): error: variable "met_p1" is not a type name
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(221): error: invalid specifier for structured binding declaration
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(221): error: expected an identifier
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump.cu(221): error: expected a "]"
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump.cu(222): error: variable "met_p1" is not a type name
          met_p1[2] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump.cu(222): error: invalid specifier for structured binding declaration
          met_p1[2] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

Error limit reached.
100 errors detected in the compilation of "src/kernels/dump/ldm_kernels_dump.cu".
Compilation terminated.
src/kernels/particle/../device/ldm_kernels_device.cuh(104): error: identifier "curandState" is undefined
  __attribute__((device)) float getRand(curandState* states);
                                        ^

src/kernels/particle/../device/ldm_kernels_device.cuh(104): error: identifier "states" is undefined
  __attribute__((device)) float getRand(curandState* states);
                                                     ^

src/kernels/particle/../device/ldm_kernels_device.cuh(122): error: type name is not allowed
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                  ^

src/kernels/particle/../device/ldm_kernels_device.cuh(122): error: too many initializer values
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                  ^

src/kernels/particle/../device/ldm_kernels_device.cuh(122): error: expected a ")"
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                        ^

src/kernels/particle/../device/ldm_kernels_device.cuh(144): error: name followed by "::" must be a class or namespace name
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                  ^

src/kernels/particle/../device/ldm_kernels_device.cuh(144): error: incomplete type "void" is not allowed
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                               ^

src/kernels/particle/../device/ldm_kernels_device.cuh(144): error: identifier "d_part" is undefined
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                ^

src/kernels/particle/../device/ldm_kernels_device.cuh(144): error: type name is not allowed
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                        ^

src/kernels/particle/../device/ldm_kernels_device.cuh(144): error: expected a ")"
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                              ^

src/kernels/particle/../device/ldm_kernels_device.cuh(162): error: name followed by "::" must be a class or namespace name
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                     ^

src/kernels/particle/../device/ldm_kernels_device.cuh(162): error: incomplete type "void" is not allowed
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                               ^

src/kernels/particle/../device/ldm_kernels_device.cuh(162): error: type name is not allowed
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                                           ^

src/kernels/particle/../device/ldm_kernels_device.cuh(162): error: expected a ")"
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                                                 ^

src/kernels/particle/../device/ldm_kernels_device.cuh(184): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float activationRatio,
      ^

src/kernels/particle/../device/ldm_kernels_device.cuh(183): error: incomplete type "void" is not allowed
  __attribute__((global)) void update_particle_flags_ens(
                               ^

src/kernels/particle/../device/ldm_kernels_device.cuh(184): error: type name is not allowed
      LDM::LDMpart* d_part, float activationRatio,
                            ^

src/kernels/particle/../device/ldm_kernels_device.cuh(184): error: expected a ")"
      LDM::LDMpart* d_part, float activationRatio,
                                  ^

src/kernels/particle/ldm_kernels_particle.cuh(68): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
      ^

src/kernels/particle/ldm_kernels_particle.cuh(67): error: incomplete type "void" is not allowed
  __attribute__((global)) void move_part_by_wind_mpi(
                               ^

src/kernels/particle/ldm_kernels_particle.cuh(68): error: type name is not allowed
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                            ^

src/kernels/particle/ldm_kernels_particle.cuh(68): error: expected a ")"
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                                  ^

src/kernels/particle/ldm_kernels_particle.cu(9): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
      ^

src/kernels/particle/ldm_kernels_particle.cu(8): error: variable "move_part_by_wind_mpi" has already been defined (previous definition at line 67 of src/kernels/particle/ldm_kernels_particle.cuh)
  __attribute__((global)) void move_part_by_wind_mpi(
                               ^

src/kernels/particle/ldm_kernels_particle.cu(8): error: incomplete type "void" is not allowed
  __attribute__((global)) void move_part_by_wind_mpi(
                               ^

src/kernels/particle/ldm_kernels_particle.cu(9): error: type name is not allowed
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                            ^

src/kernels/particle/ldm_kernels_particle.cu(9): error: expected a ")"
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                                  ^

src/kernels/particle/ldm_kernels_particle.cu(13): error: expected a ";"
      FlexPres* device_meteorological_flex_pres1){
                                                 ^

src/kernels/particle/ldm_kernels_particle.cu(31): error: "curandState" is not a type name
          curandState ss;
          ^

src/kernels/particle/ldm_kernels_particle.cu(32): error: this declaration has no storage class or type specifier
          curand_init(seed, idx, 0, &ss);
          ^

src/kernels/particle/ldm_kernels_particle.cu(32): error: identifier "seed" is undefined
          curand_init(seed, idx, 0, &ss);
                      ^

src/kernels/particle/ldm_kernels_particle.cu(32): error: identifier "idx" is undefined
          curand_init(seed, idx, 0, &ss);
                            ^

src/kernels/particle/ldm_kernels_particle.cu(32): error: too many initializer values
          curand_init(seed, idx, 0, &ss);
                            ^

src/kernels/particle/ldm_kernels_particle.cu(36): error: expected a declaration
          if(p.x*0.5 -179.0 >= 180.0) {
          ^

src/kernels/particle/ldm_kernels_particle.cu(41): error: this declaration has no storage class or type specifier
          yidx = int(p.y);
          ^

src/kernels/particle/ldm_kernels_particle.cu(41): error: variable "yidx" has already been defined (previous definition at line 35)
          yidx = int(p.y);
          ^

src/kernels/particle/ldm_kernels_particle.cu(41): error: identifier "p" is undefined
          yidx = int(p.y);
                     ^

src/kernels/particle/ldm_kernels_particle.cu(44): error: declaration is incompatible with overloaded function "index" (declared at line 48 of /usr/include/strings.h)
          int index;
              ^

src/kernels/particle/ldm_kernels_particle.cu(49): error: expected a declaration
          for(int i=0; i<2; i++){
          ^

src/kernels/particle/ldm_kernels_particle.cu(61): error: expected a declaration
          for(int i=0; i<dimZ_GFS; i++){
          ^

src/kernels/particle/ldm_kernels_particle.cu(70): error: declaration is incompatible with overloaded function "y0" (declared at line 3089 of /usr/local/cuda/bin/../targets/x86_64-linux/include/crt/math_functions.h)
          float y0 = p.y-yidx;
                ^

src/kernels/particle/ldm_kernels_particle.cu(73): error: identifier "d_flex_hgt" is undefined
          float height_diff = d_flex_hgt[zidx+1] - d_flex_hgt[zidx];
                              ^

src/kernels/particle/ldm_kernels_particle.cu(75): error: expected a declaration
          if (abs(height_diff) < 1e-6f) {
          ^

src/kernels/particle/ldm_kernels_particle.cu(82): error: declaration is incompatible with overloaded function "y1" (declared at line 3143 of /usr/local/cuda/bin/../targets/x86_64-linux/include/crt/math_functions.h)
          float y1 = 1-y0;
                ^

src/kernels/particle/ldm_kernels_particle.cu(84): error: identifier "t0" is undefined
          float t1 = 1-t0;
                       ^

src/kernels/particle/ldm_kernels_particle.cu(88): error: identifier "x1" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                       ^

src/kernels/particle/ldm_kernels_particle.cu(88): error: identifier "device_meteorological_flex_unis0" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                                ^

src/kernels/particle/ldm_kernels_particle.cu(88): error: identifier "dimY_GFS" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                                                                          ^

src/kernels/particle/ldm_kernels_particle.cu(92): error: identifier "device_meteorological_flex_unis1" is undefined
                      +x1*y1*t0*device_meteorological_flex_unis1[(xidx) * dimY_GFS + (yidx)].USTR
                                ^

src/kernels/particle/ldm_kernels_particle.cu(115): error: this declaration has no storage class or type specifier
          obkl = 1/obkl;
          ^

src/kernels/particle/ldm_kernels_particle.cu(115): error: variable "obkl" has already been defined (previous definition at line 106)
          obkl = 1/obkl;
          ^

src/kernels/particle/ldm_kernels_particle.cu(155): error: identifier "device_meteorological_flex_pres0" is undefined
          float drho_000 = device_meteorological_flex_pres0[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].DRHO;
                           ^

src/kernels/particle/ldm_kernels_particle.cu(155): error: identifier "dimZ_GFS" is undefined
          float drho_000 = device_meteorological_flex_pres0[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].DRHO;
                                                                                ^

src/kernels/particle/ldm_kernels_particle.cu(158): error: expected a declaration
          if (idx == 0 && isnan(drho_000)) {
          ^

src/kernels/particle/ldm_kernels_particle.cu(183): error: identifier "drho_raw" is undefined
          float drho = isnan(drho_raw) ? 0.0f : drho_raw;
                             ^

src/kernels/particle/ldm_kernels_particle.cu(193): error: identifier "device_meteorological_flex_pres1" is undefined
                     +x1*y1*z1*t0*device_meteorological_flex_pres1[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].RHO
                                  ^

src/kernels/particle/ldm_kernels_particle.cu(203): error: identifier "FlexPres" is undefined
          FlexPres met_p0[8], met_p1[8];
          ^

src/kernels/particle/ldm_kernels_particle.cu(207): error: identifier "dimX_GFS" is undefined
          int safe_xidx = min(xidx, dimX_GFS - 2);
                                    ^

src/kernels/particle/ldm_kernels_particle.cu(211): error: variable "met_p0" is not a type name
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(211): error: invalid specifier for structured binding declaration
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(211): error: expected an identifier
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle.cu(211): error: expected a "]"
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle.cu(212): error: variable "met_p0" is not a type name
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(212): error: invalid specifier for structured binding declaration
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(212): error: expected an identifier
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle.cu(212): error: expected a "]"
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle.cu(213): error: variable "met_p0" is not a type name
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(213): error: invalid specifier for structured binding declaration
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(213): error: expected an identifier
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle.cu(213): error: expected a "]"
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle.cu(214): error: variable "met_p0" is not a type name
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(214): error: invalid specifier for structured binding declaration
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(214): error: expected an identifier
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle.cu(214): error: expected a "]"
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle.cu(215): error: variable "met_p0" is not a type name
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(215): error: invalid specifier for structured binding declaration
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(215): error: expected an identifier
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/particle/ldm_kernels_particle.cu(215): error: expected a "]"
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/particle/ldm_kernels_particle.cu(216): error: variable "met_p0" is not a type name
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(216): error: invalid specifier for structured binding declaration
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(216): error: expected an identifier
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/particle/ldm_kernels_particle.cu(216): error: expected a "]"
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/particle/ldm_kernels_particle.cu(217): error: variable "met_p0" is not a type name
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(217): error: invalid specifier for structured binding declaration
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(217): error: expected an identifier
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/particle/ldm_kernels_particle.cu(217): error: expected a "]"
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/particle/ldm_kernels_particle.cu(218): error: variable "met_p0" is not a type name
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(218): error: invalid specifier for structured binding declaration
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(218): error: expected an identifier
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/particle/ldm_kernels_particle.cu(218): error: expected a "]"
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/particle/ldm_kernels_particle.cu(220): error: variable "met_p1" is not a type name
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(220): error: invalid specifier for structured binding declaration
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(220): error: expected an identifier
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle.cu(220): error: expected a "]"
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle.cu(221): error: variable "met_p1" is not a type name
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(221): error: invalid specifier for structured binding declaration
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(221): error: expected an identifier
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle.cu(221): error: expected a "]"
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle.cu(222): error: variable "met_p1" is not a type name
          met_p1[2] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle.cu(222): error: invalid specifier for structured binding declaration
          met_p1[2] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

Error limit reached.
100 errors detected in the compilation of "src/kernels/particle/ldm_kernels_particle.cu".
Compilation terminated.
make: *** [Makefile:122: objectfiles/src/kernels/dump/ldm_kernels_dump.o] Error 4
make: *** Waiting for unfinished jobs....
src/kernels/dump/../device/ldm_kernels_device.cuh(104): error: identifier "curandState" is undefined
  __attribute__((device)) float getRand(curandState* states);
                                        ^

src/kernels/dump/../device/ldm_kernels_device.cuh(104): error: identifier "states" is undefined
  __attribute__((device)) float getRand(curandState* states);
                                                     ^

src/kernels/dump/../device/ldm_kernels_device.cuh(122): error: type name is not allowed
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                  ^

src/kernels/dump/../device/ldm_kernels_device.cuh(122): error: too many initializer values
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                  ^

src/kernels/dump/../device/ldm_kernels_device.cuh(122): error: expected a ")"
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                        ^

src/kernels/dump/../device/ldm_kernels_device.cuh(144): error: name followed by "::" must be a class or namespace name
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                  ^

src/kernels/dump/../device/ldm_kernels_device.cuh(144): error: incomplete type "void" is not allowed
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                               ^

src/kernels/dump/../device/ldm_kernels_device.cuh(144): error: identifier "d_part" is undefined
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                ^

src/kernels/dump/../device/ldm_kernels_device.cuh(144): error: type name is not allowed
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                        ^

src/kernels/dump/../device/ldm_kernels_device.cuh(144): error: expected a ")"
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                              ^

src/kernels/dump/../device/ldm_kernels_device.cuh(162): error: name followed by "::" must be a class or namespace name
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                     ^

src/kernels/dump/../device/ldm_kernels_device.cuh(162): error: incomplete type "void" is not allowed
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                               ^

src/kernels/dump/../device/ldm_kernels_device.cuh(162): error: type name is not allowed
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                                           ^

src/kernels/dump/../device/ldm_kernels_device.cuh(162): error: expected a ")"
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                                                 ^

src/kernels/dump/../device/ldm_kernels_device.cuh(184): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float activationRatio,
      ^

src/kernels/dump/../device/ldm_kernels_device.cuh(183): error: incomplete type "void" is not allowed
  __attribute__((global)) void update_particle_flags_ens(
                               ^

src/kernels/dump/../device/ldm_kernels_device.cuh(184): error: type name is not allowed
      LDM::LDMpart* d_part, float activationRatio,
                            ^

src/kernels/dump/../device/ldm_kernels_device.cuh(184): error: expected a ")"
      LDM::LDMpart* d_part, float activationRatio,
                                  ^

src/kernels/dump/ldm_kernels_dump_ens.cuh(57): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
      ^

src/kernels/dump/ldm_kernels_dump_ens.cuh(56): error: incomplete type "void" is not allowed
  __attribute__((global)) void move_part_by_wind_mpi_ens_dump(
                               ^

src/kernels/dump/ldm_kernels_dump_ens.cuh(57): error: type name is not allowed
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                            ^

src/kernels/dump/ldm_kernels_dump_ens.cuh(57): error: expected a ")"
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                                  ^

src/kernels/dump/ldm_kernels_dump_ens.cu(9): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
      ^

src/kernels/dump/ldm_kernels_dump_ens.cu(8): error: variable "move_part_by_wind_mpi_ens_dump" has already been defined (previous definition at line 56 of src/kernels/dump/ldm_kernels_dump_ens.cuh)
  __attribute__((global)) void move_part_by_wind_mpi_ens_dump(
                               ^

src/kernels/dump/ldm_kernels_dump_ens.cu(8): error: incomplete type "void" is not allowed
  __attribute__((global)) void move_part_by_wind_mpi_ens_dump(
                               ^

src/kernels/dump/ldm_kernels_dump_ens.cu(9): error: type name is not allowed
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                            ^

src/kernels/dump/ldm_kernels_dump_ens.cu(9): error: expected a ")"
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                                  ^

src/kernels/dump/ldm_kernels_dump_ens.cu(14): error: expected a ";"
      int total_particles){
                          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(32): error: "curandState" is not a type name
          curandState ss;
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(33): error: this declaration has no storage class or type specifier
          curand_init(seed, idx, 0, &ss);
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(33): error: identifier "seed" is undefined
          curand_init(seed, idx, 0, &ss);
                      ^

src/kernels/dump/ldm_kernels_dump_ens.cu(33): error: identifier "idx" is undefined
          curand_init(seed, idx, 0, &ss);
                            ^

src/kernels/dump/ldm_kernels_dump_ens.cu(33): error: too many initializer values
          curand_init(seed, idx, 0, &ss);
                            ^

src/kernels/dump/ldm_kernels_dump_ens.cu(37): error: expected a declaration
          if(p.x*0.5 -179.0 >= 180.0) {
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(42): error: this declaration has no storage class or type specifier
          yidx = int(p.y);
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(42): error: variable "yidx" has already been defined (previous definition at line 36)
          yidx = int(p.y);
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(42): error: identifier "p" is undefined
          yidx = int(p.y);
                     ^

src/kernels/dump/ldm_kernels_dump_ens.cu(45): error: declaration is incompatible with overloaded function "index" (declared at line 48 of /usr/include/strings.h)
          int index;
              ^

src/kernels/dump/ldm_kernels_dump_ens.cu(50): error: expected a declaration
          for(int i=0; i<2; i++){
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(62): error: expected a declaration
          for(int i=0; i<dimZ_GFS; i++){
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(71): error: declaration is incompatible with overloaded function "y0" (declared at line 3089 of /usr/local/cuda/bin/../targets/x86_64-linux/include/crt/math_functions.h)
          float y0 = p.y-yidx;
                ^

src/kernels/dump/ldm_kernels_dump_ens.cu(74): error: identifier "d_flex_hgt" is undefined
          float height_diff = d_flex_hgt[zidx+1] - d_flex_hgt[zidx];
                              ^

src/kernels/dump/ldm_kernels_dump_ens.cu(76): error: expected a declaration
          if (abs(height_diff) < 1e-6f) {
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(83): error: declaration is incompatible with overloaded function "y1" (declared at line 3143 of /usr/local/cuda/bin/../targets/x86_64-linux/include/crt/math_functions.h)
          float y1 = 1-y0;
                ^

src/kernels/dump/ldm_kernels_dump_ens.cu(85): error: identifier "t0" is undefined
          float t1 = 1-t0;
                       ^

src/kernels/dump/ldm_kernels_dump_ens.cu(89): error: identifier "x1" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                       ^

src/kernels/dump/ldm_kernels_dump_ens.cu(89): error: identifier "device_meteorological_flex_unis0" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                                ^

src/kernels/dump/ldm_kernels_dump_ens.cu(89): error: identifier "dimY_GFS" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                                                                          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(93): error: identifier "device_meteorological_flex_unis1" is undefined
                      +x1*y1*t0*device_meteorological_flex_unis1[(xidx) * dimY_GFS + (yidx)].USTR
                                ^

src/kernels/dump/ldm_kernels_dump_ens.cu(116): error: this declaration has no storage class or type specifier
          obkl = 1/obkl;
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(116): error: variable "obkl" has already been defined (previous definition at line 107)
          obkl = 1/obkl;
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(156): error: identifier "device_meteorological_flex_pres0" is undefined
          float drho_000 = device_meteorological_flex_pres0[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].DRHO;
                           ^

src/kernels/dump/ldm_kernels_dump_ens.cu(156): error: identifier "dimZ_GFS" is undefined
          float drho_000 = device_meteorological_flex_pres0[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].DRHO;
                                                                                ^

src/kernels/dump/ldm_kernels_dump_ens.cu(159): error: expected a declaration
          if (idx == 0 && isnan(drho_000)) {
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(184): error: identifier "drho_raw" is undefined
          float drho = isnan(drho_raw) ? 0.0f : drho_raw;
                             ^

src/kernels/dump/ldm_kernels_dump_ens.cu(194): error: identifier "device_meteorological_flex_pres1" is undefined
                     +x1*y1*z1*t0*device_meteorological_flex_pres1[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].RHO
                                  ^

src/kernels/dump/ldm_kernels_dump_ens.cu(204): error: identifier "FlexPres" is undefined
          FlexPres met_p0[8], met_p1[8];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(208): error: identifier "dimX_GFS" is undefined
          int safe_xidx = min(xidx, dimX_GFS - 2);
                                    ^

src/kernels/dump/ldm_kernels_dump_ens.cu(212): error: variable "met_p0" is not a type name
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(212): error: invalid specifier for structured binding declaration
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(212): error: expected an identifier
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump_ens.cu(212): error: expected a "]"
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump_ens.cu(213): error: variable "met_p0" is not a type name
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(213): error: invalid specifier for structured binding declaration
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(213): error: expected an identifier
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump_ens.cu(213): error: expected a "]"
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump_ens.cu(214): error: variable "met_p0" is not a type name
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(214): error: invalid specifier for structured binding declaration
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(214): error: expected an identifier
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump_ens.cu(214): error: expected a "]"
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump_ens.cu(215): error: variable "met_p0" is not a type name
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(215): error: invalid specifier for structured binding declaration
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(215): error: expected an identifier
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump_ens.cu(215): error: expected a "]"
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump_ens.cu(216): error: variable "met_p0" is not a type name
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(216): error: invalid specifier for structured binding declaration
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(216): error: expected an identifier
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/dump/ldm_kernels_dump_ens.cu(216): error: expected a "]"
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/dump/ldm_kernels_dump_ens.cu(217): error: variable "met_p0" is not a type name
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(217): error: invalid specifier for structured binding declaration
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(217): error: expected an identifier
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/dump/ldm_kernels_dump_ens.cu(217): error: expected a "]"
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/dump/ldm_kernels_dump_ens.cu(218): error: variable "met_p0" is not a type name
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(218): error: invalid specifier for structured binding declaration
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(218): error: expected an identifier
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/dump/ldm_kernels_dump_ens.cu(218): error: expected a "]"
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/dump/ldm_kernels_dump_ens.cu(219): error: variable "met_p0" is not a type name
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(219): error: invalid specifier for structured binding declaration
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(219): error: expected an identifier
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/dump/ldm_kernels_dump_ens.cu(219): error: expected a "]"
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/dump/ldm_kernels_dump_ens.cu(221): error: variable "met_p1" is not a type name
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(221): error: invalid specifier for structured binding declaration
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(221): error: expected an identifier
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump_ens.cu(221): error: expected a "]"
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump_ens.cu(222): error: variable "met_p1" is not a type name
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(222): error: invalid specifier for structured binding declaration
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(222): error: expected an identifier
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/dump/ldm_kernels_dump_ens.cu(222): error: expected a "]"
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/dump/ldm_kernels_dump_ens.cu(223): error: variable "met_p1" is not a type name
          met_p1[2] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/dump/ldm_kernels_dump_ens.cu(223): error: invalid specifier for structured binding declaration
          met_p1[2] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

Error limit reached.
100 errors detected in the compilation of "src/kernels/dump/ldm_kernels_dump_ens.cu".
Compilation terminated.
make: *** [Makefile:122: objectfiles/src/kernels/particle/ldm_kernels_particle.o] Error 4
src/kernels/particle/../device/ldm_kernels_device.cuh(104): error: identifier "curandState" is undefined
  __attribute__((device)) float getRand(curandState* states);
                                        ^

src/kernels/particle/../device/ldm_kernels_device.cuh(104): error: identifier "states" is undefined
  __attribute__((device)) float getRand(curandState* states);
                                                     ^

src/kernels/particle/../device/ldm_kernels_device.cuh(122): error: type name is not allowed
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                  ^

src/kernels/particle/../device/ldm_kernels_device.cuh(122): error: too many initializer values
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                  ^

src/kernels/particle/../device/ldm_kernels_device.cuh(122): error: expected a ")"
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                        ^

src/kernels/particle/../device/ldm_kernels_device.cuh(144): error: name followed by "::" must be a class or namespace name
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                  ^

src/kernels/particle/../device/ldm_kernels_device.cuh(144): error: incomplete type "void" is not allowed
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                               ^

src/kernels/particle/../device/ldm_kernels_device.cuh(144): error: identifier "d_part" is undefined
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                ^

src/kernels/particle/../device/ldm_kernels_device.cuh(144): error: type name is not allowed
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                        ^

src/kernels/particle/../device/ldm_kernels_device.cuh(144): error: expected a ")"
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                              ^

src/kernels/particle/../device/ldm_kernels_device.cuh(162): error: name followed by "::" must be a class or namespace name
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                     ^

src/kernels/particle/../device/ldm_kernels_device.cuh(162): error: incomplete type "void" is not allowed
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                               ^

src/kernels/particle/../device/ldm_kernels_device.cuh(162): error: type name is not allowed
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                                           ^

src/kernels/particle/../device/ldm_kernels_device.cuh(162): error: expected a ")"
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                                                 ^

src/kernels/particle/../device/ldm_kernels_device.cuh(184): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float activationRatio,
      ^

src/kernels/particle/../device/ldm_kernels_device.cuh(183): error: incomplete type "void" is not allowed
  __attribute__((global)) void update_particle_flags_ens(
                               ^

src/kernels/particle/../device/ldm_kernels_device.cuh(184): error: type name is not allowed
      LDM::LDMpart* d_part, float activationRatio,
                            ^

src/kernels/particle/../device/ldm_kernels_device.cuh(184): error: expected a ")"
      LDM::LDMpart* d_part, float activationRatio,
                                  ^

src/kernels/particle/ldm_kernels_particle_ens.cuh(63): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
      ^

src/kernels/particle/ldm_kernels_particle_ens.cuh(62): error: incomplete type "void" is not allowed
  __attribute__((global)) void move_part_by_wind_mpi_ens(
                               ^

src/kernels/particle/ldm_kernels_particle_ens.cuh(63): error: type name is not allowed
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                            ^

src/kernels/particle/ldm_kernels_particle_ens.cuh(63): error: expected a ")"
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                                  ^

src/kernels/particle/ldm_kernels_particle_ens.cu(9): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
      ^

src/kernels/particle/ldm_kernels_particle_ens.cu(8): error: variable "move_part_by_wind_mpi_ens" has already been defined (previous definition at line 62 of src/kernels/particle/ldm_kernels_particle_ens.cuh)
  __attribute__((global)) void move_part_by_wind_mpi_ens(
                               ^

src/kernels/particle/ldm_kernels_particle_ens.cu(8): error: incomplete type "void" is not allowed
  __attribute__((global)) void move_part_by_wind_mpi_ens(
                               ^

src/kernels/particle/ldm_kernels_particle_ens.cu(9): error: type name is not allowed
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                            ^

src/kernels/particle/ldm_kernels_particle_ens.cu(9): error: expected a ")"
      LDM::LDMpart* d_part, float t0, int rank, float* d_dryDep, float* d_wetDep, int mesh_nx, int mesh_ny,
                                  ^

src/kernels/particle/ldm_kernels_particle_ens.cu(14): error: expected a ";"
      int total_particles){
                          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(32): error: "curandState" is not a type name
          curandState ss;
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(33): error: this declaration has no storage class or type specifier
          curand_init(seed, idx, 0, &ss);
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(33): error: identifier "seed" is undefined
          curand_init(seed, idx, 0, &ss);
                      ^

src/kernels/particle/ldm_kernels_particle_ens.cu(33): error: identifier "idx" is undefined
          curand_init(seed, idx, 0, &ss);
                            ^

src/kernels/particle/ldm_kernels_particle_ens.cu(33): error: too many initializer values
          curand_init(seed, idx, 0, &ss);
                            ^

src/kernels/particle/ldm_kernels_particle_ens.cu(37): error: expected a declaration
          if(p.x*0.5 -179.0 >= 180.0) {
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(42): error: this declaration has no storage class or type specifier
          yidx = int(p.y);
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(42): error: variable "yidx" has already been defined (previous definition at line 36)
          yidx = int(p.y);
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(42): error: identifier "p" is undefined
          yidx = int(p.y);
                     ^

src/kernels/particle/ldm_kernels_particle_ens.cu(45): error: declaration is incompatible with overloaded function "index" (declared at line 48 of /usr/include/strings.h)
          int index;
              ^

src/kernels/particle/ldm_kernels_particle_ens.cu(50): error: expected a declaration
          for(int i=0; i<2; i++){
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(62): error: expected a declaration
          for(int i=0; i<dimZ_GFS; i++){
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(71): error: declaration is incompatible with overloaded function "y0" (declared at line 3089 of /usr/local/cuda/bin/../targets/x86_64-linux/include/crt/math_functions.h)
          float y0 = p.y-yidx;
                ^

src/kernels/particle/ldm_kernels_particle_ens.cu(74): error: identifier "d_flex_hgt" is undefined
          float height_diff = d_flex_hgt[zidx+1] - d_flex_hgt[zidx];
                              ^

src/kernels/particle/ldm_kernels_particle_ens.cu(76): error: expected a declaration
          if (abs(height_diff) < 1e-6f) {
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(83): error: declaration is incompatible with overloaded function "y1" (declared at line 3143 of /usr/local/cuda/bin/../targets/x86_64-linux/include/crt/math_functions.h)
          float y1 = 1-y0;
                ^

src/kernels/particle/ldm_kernels_particle_ens.cu(85): error: identifier "t0" is undefined
          float t1 = 1-t0;
                       ^

src/kernels/particle/ldm_kernels_particle_ens.cu(89): error: identifier "x1" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                       ^

src/kernels/particle/ldm_kernels_particle_ens.cu(89): error: identifier "device_meteorological_flex_unis0" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                                ^

src/kernels/particle/ldm_kernels_particle_ens.cu(89): error: identifier "dimY_GFS" is undefined
          float ustr = x1*y1*t1*device_meteorological_flex_unis0[(xidx) * dimY_GFS + (yidx)].USTR
                                                                          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(93): error: identifier "device_meteorological_flex_unis1" is undefined
                      +x1*y1*t0*device_meteorological_flex_unis1[(xidx) * dimY_GFS + (yidx)].USTR
                                ^

src/kernels/particle/ldm_kernels_particle_ens.cu(116): error: this declaration has no storage class or type specifier
          obkl = 1/obkl;
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(116): error: variable "obkl" has already been defined (previous definition at line 107)
          obkl = 1/obkl;
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(156): error: identifier "device_meteorological_flex_pres0" is undefined
          float drho_000 = device_meteorological_flex_pres0[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].DRHO;
                           ^

src/kernels/particle/ldm_kernels_particle_ens.cu(156): error: identifier "dimZ_GFS" is undefined
          float drho_000 = device_meteorological_flex_pres0[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].DRHO;
                                                                                ^

src/kernels/particle/ldm_kernels_particle_ens.cu(159): error: expected a declaration
          if (idx == 0 && isnan(drho_000)) {
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(184): error: identifier "drho_raw" is undefined
          float drho = isnan(drho_raw) ? 0.0f : drho_raw;
                             ^

src/kernels/particle/ldm_kernels_particle_ens.cu(194): error: identifier "device_meteorological_flex_pres1" is undefined
                     +x1*y1*z1*t0*device_meteorological_flex_pres1[(xidx) * dimY_GFS * dimZ_GFS + (yidx) * dimZ_GFS + (zidx)].RHO
                                  ^

src/kernels/particle/ldm_kernels_particle_ens.cu(204): error: identifier "FlexPres" is undefined
          FlexPres met_p0[8], met_p1[8];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(208): error: identifier "dimX_GFS" is undefined
          int safe_xidx = min(xidx, dimX_GFS - 2);
                                    ^

src/kernels/particle/ldm_kernels_particle_ens.cu(212): error: variable "met_p0" is not a type name
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(212): error: invalid specifier for structured binding declaration
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(212): error: expected an identifier
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle_ens.cu(212): error: expected a "]"
          met_p0[0] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle_ens.cu(213): error: variable "met_p0" is not a type name
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(213): error: invalid specifier for structured binding declaration
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(213): error: expected an identifier
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle_ens.cu(213): error: expected a "]"
          met_p0[1] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle_ens.cu(214): error: variable "met_p0" is not a type name
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(214): error: invalid specifier for structured binding declaration
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(214): error: expected an identifier
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle_ens.cu(214): error: expected a "]"
          met_p0[2] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle_ens.cu(215): error: variable "met_p0" is not a type name
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(215): error: invalid specifier for structured binding declaration
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(215): error: expected an identifier
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle_ens.cu(215): error: expected a "]"
          met_p0[3] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle_ens.cu(216): error: variable "met_p0" is not a type name
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(216): error: invalid specifier for structured binding declaration
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(216): error: expected an identifier
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/particle/ldm_kernels_particle_ens.cu(216): error: expected a "]"
          met_p0[4] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/particle/ldm_kernels_particle_ens.cu(217): error: variable "met_p0" is not a type name
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(217): error: invalid specifier for structured binding declaration
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(217): error: expected an identifier
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/particle/ldm_kernels_particle_ens.cu(217): error: expected a "]"
          met_p0[5] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/particle/ldm_kernels_particle_ens.cu(218): error: variable "met_p0" is not a type name
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(218): error: invalid specifier for structured binding declaration
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(218): error: expected an identifier
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/particle/ldm_kernels_particle_ens.cu(218): error: expected a "]"
          met_p0[6] = device_meteorological_flex_pres0[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/particle/ldm_kernels_particle_ens.cu(219): error: variable "met_p0" is not a type name
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(219): error: invalid specifier for structured binding declaration
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(219): error: expected an identifier
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                 ^

src/kernels/particle/ldm_kernels_particle_ens.cu(219): error: expected a "]"
          met_p0[7] = device_meteorological_flex_pres0[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx+1)];
                    ^

src/kernels/particle/ldm_kernels_particle_ens.cu(221): error: variable "met_p1" is not a type name
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(221): error: invalid specifier for structured binding declaration
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(221): error: expected an identifier
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle_ens.cu(221): error: expected a "]"
          met_p1[0] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle_ens.cu(222): error: variable "met_p1" is not a type name
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(222): error: invalid specifier for structured binding declaration
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(222): error: expected an identifier
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                 ^

src/kernels/particle/ldm_kernels_particle_ens.cu(222): error: expected a "]"
          met_p1[1] = device_meteorological_flex_pres1[(safe_xidx+1) * dimY_GFS * dimZ_GFS + (safe_yidx) * dimZ_GFS + (safe_zidx)];
                    ^

src/kernels/particle/ldm_kernels_particle_ens.cu(223): error: variable "met_p1" is not a type name
          met_p1[2] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

src/kernels/particle/ldm_kernels_particle_ens.cu(223): error: invalid specifier for structured binding declaration
          met_p1[2] = device_meteorological_flex_pres1[(safe_xidx) * dimY_GFS * dimZ_GFS + (safe_yidx+1) * dimZ_GFS + (safe_zidx)];
          ^

Error limit reached.
100 errors detected in the compilation of "src/kernels/particle/ldm_kernels_particle_ens.cu".
Compilation terminated.
make: *** [Makefile:122: objectfiles/src/kernels/dump/ldm_kernels_dump_ens.o] Error 4
make: *** [Makefile:122: objectfiles/src/kernels/particle/ldm_kernels_particle_ens.o] Error 4
src/kernels/device/ldm_kernels_device.cuh(104): error: identifier "curandState" is undefined
  __attribute__((device)) float getRand(curandState* states);
                                        ^

src/kernels/device/ldm_kernels_device.cuh(104): error: identifier "states" is undefined
  __attribute__((device)) float getRand(curandState* states);
                                                     ^

src/kernels/device/ldm_kernels_device.cuh(122): error: type name is not allowed
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                  ^

src/kernels/device/ldm_kernels_device.cuh(122): error: too many initializer values
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                  ^

src/kernels/device/ldm_kernels_device.cuh(122): error: expected a ")"
  __attribute__((device)) float GaussianRand(curandState* states, float mu, float stdv);
                                                                        ^

src/kernels/device/ldm_kernels_device.cuh(144): error: name followed by "::" must be a class or namespace name
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                  ^

src/kernels/device/ldm_kernels_device.cuh(144): error: incomplete type "void" is not allowed
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                               ^

src/kernels/device/ldm_kernels_device.cuh(144): error: identifier "d_part" is undefined
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                ^

src/kernels/device/ldm_kernels_device.cuh(144): error: type name is not allowed
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                        ^

src/kernels/device/ldm_kernels_device.cuh(144): error: expected a ")"
  __attribute__((global)) void init_curand_states(LDM::LDMpart* d_part, float t0);
                                                                              ^

src/kernels/device/ldm_kernels_device.cuh(162): error: name followed by "::" must be a class or namespace name
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                     ^

src/kernels/device/ldm_kernels_device.cuh(162): error: incomplete type "void" is not allowed
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                               ^

src/kernels/device/ldm_kernels_device.cuh(162): error: type name is not allowed
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                                           ^

src/kernels/device/ldm_kernels_device.cuh(162): error: expected a ")"
  __attribute__((global)) void update_particle_flags(LDM::LDMpart* d_part, float activationRatio);
                                                                                 ^

src/kernels/device/ldm_kernels_device.cuh(184): error: name followed by "::" must be a class or namespace name
      LDM::LDMpart* d_part, float activationRatio,
      ^

src/kernels/device/ldm_kernels_device.cuh(183): error: incomplete type "void" is not allowed
  __attribute__((global)) void update_particle_flags_ens(
                               ^

src/kernels/device/ldm_kernels_device.cuh(184): error: type name is not allowed
      LDM::LDMpart* d_part, float activationRatio,
                            ^

src/kernels/device/ldm_kernels_device.cuh(184): error: expected a ")"
      LDM::LDMpart* d_part, float activationRatio,
                                  ^

src/kernels/device/ldm_kernels_device.cu(24): error: identifier "d_dt" is undefined
          float decay_factor = __expf(-decay_rate_sr92 * d_dt);
                                                         ^

src/kernels/device/ldm_kernels_device.cu(128): error: variable "getRand" has already been defined (previous definition at line 104 of src/kernels/device/ldm_kernels_device.cuh)
  __attribute__((device)) float getRand(curandState* states){
                                ^

src/kernels/device/ldm_kernels_device.cu(128): error: expected a ";"
  __attribute__((device)) float getRand(curandState* states){
                                                            ^

21 errors detected in the compilation of "src/kernels/device/ldm_kernels_device.cu".
make: *** [Makefile:122: objectfiles/src/kernels/device/ldm_kernels_device.o] Error 2
./src/include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

src/physics/../include/ldm.cuh(292): error: expected an identifier
      constexpr int 60 = 60;
                    ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

25 errors detected in the compilation of "src/simulation/ldm_func_particle.cu".
./src/include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

./src/kernels/eki/../../include/ldm.cuh(48): error: variable "d_turb_switch" has already been defined (previous definition at line 48 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_turb_switch;
                                ^

./src/kernels/eki/../../include/ldm.cuh(49): error: variable "d_drydep" has already been defined (previous definition at line 49 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_drydep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(50): error: variable "d_wetdep" has already been defined (previous definition at line 50 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_wetdep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(51): error: variable "d_raddecay" has already been defined (previous definition at line 51 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_raddecay;
                                ^

./src/kernels/eki/../../include/ldm.cuh(63): error: class "SimulationConfig" has already been defined (previous definition at line 63 of src/init/../core/ldm.cuh)
  struct SimulationConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(69): error: expected a ")"
      bool (g_sim.isRural);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: expected a ")"
      bool (g_sim.isGFS);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: "g_sim" has already been declared in the current scope
      bool (g_sim.isGFS);
            ^

./src/kernels/eki/../../include/ldm.cuh(76): error: class "MPIConfig" has already been defined (previous definition at line 76 of src/init/../core/ldm.cuh)
  struct MPIConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(87): error: class "EKIConfig" has already been defined (previous definition at line 87 of src/init/../core/ldm.cuh)
  struct EKIConfig {
         ^

src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/kernels/eki/../../include/ldm.cuh(131): error: class "EKIMeteorologicalData" has already been defined (previous definition at line 131 of src/init/../core/ldm.cuh)
  struct EKIMeteorologicalData {
         ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

src/physics/../include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

src/physics/../include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

src/physics/../include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

src/physics/../include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

src/physics/../include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

src/physics/../include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

src/physics/../include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

src/physics/../include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

src/physics/../include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

src/physics/../include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

src/physics/../include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

src/physics/../include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

src/physics/../include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

src/physics/../include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

./src/kernels/eki/../../include/ldm.cuh(270): error: variable "g_sim" has already been defined (previous definition at line 165 of src/init/../core/ldm.cuh)
  SimulationConfig g_sim;
                   ^

./src/kernels/eki/../../include/ldm.cuh(271): error: variable "g_mpi" has already been defined (previous definition at line 166 of src/init/../core/ldm.cuh)
  MPIConfig g_mpi;
            ^

./src/kernels/eki/../../include/ldm.cuh(272): error: variable "g_eki" has already been defined (previous definition at line 167 of src/init/../core/ldm.cuh)
  EKIConfig g_eki;
            ^

./src/kernels/eki/../../include/ldm.cuh(273): error: variable "g_config" has already been defined (previous definition at line 168 of src/init/../core/ldm.cuh)
  ConfigReader g_config;
               ^

./src/kernels/eki/../../include/ldm.cuh(276): error: variable "g_eki_meteo" has already been defined (previous definition at line 171 of src/init/../core/ldm.cuh)
  EKIMeteorologicalData g_eki_meteo;
                        ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_E" has already been defined (previous definition at line 176 of src/init/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_W" has already been defined (previous definition at line 176 of src/init/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                         ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_N" has already been defined (previous definition at line 176 of src/init/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_S" has already been defined (previous definition at line 176 of src/init/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                                              ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimX" has already been defined (previous definition at line 177 of src/init/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                    ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimY" has already been defined (previous definition at line 177 of src/init/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_pres" has already been defined (previous definition at line 177 of src/init/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                            ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_etas" has already been defined (previous definition at line 177 of src/init/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimX_GFS" has already been defined (previous definition at line 178 of src/init/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimY_GFS" has already been defined (previous definition at line 178 of src/init/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimZ_GFS" has already been defined (previous definition at line 178 of src/init/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                                    ^

./src/kernels/eki/../../include/ldm.cuh(284): error: variable "Constants::time_interval" has already been defined (previous definition at line 179 of src/init/../core/ldm.cuh)
      constexpr int time_interval = 10800;
                    ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_trop" has already been defined (previous definition at line 182 of src/init/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_strat" has already been defined (previous definition at line 182 of src/init/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::turbmesoscale" has already been defined (previous definition at line 182 of src/init/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::r_earth" has already been defined (previous definition at line 182 of src/init/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                                             ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_myl" has already been defined (previous definition at line 183 of src/init/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_nyl" has already been defined (previous definition at line 183 of src/init/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                       ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_lam" has already been defined (previous definition at line 183 of src/init/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                        ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_kb" has already been defined (previous definition at line 183 of src/init/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                                         ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_eps" has already been defined (previous definition at line 184 of src/init/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_Tr" has already been defined (previous definition at line 184 of src/init/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                       ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_rair" has already been defined (previous definition at line 184 of src/init/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_ga" has already been defined (previous definition at line 184 of src/init/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                       ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_href" has already been defined (previous definition at line 184 of src/init/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                                    ^

./src/kernels/eki/../../include/ldm.cuh(290): error: variable "Constants::_nspec" has already been defined (previous definition at line 185 of src/init/../core/ldm.cuh)
      constexpr int _nspec = 19;
                    ^

./src/kernels/eki/../../include/ldm.cuh(291): error: variable "Constants::NI" has already been defined (previous definition at line 186 of src/init/../core/ldm.cuh)
      constexpr int NI = 11;
                    ^

./src/kernels/eki/../../include/ldm.cuh(292): error: expected an identifier
      constexpr int 60 = 60;
                    ^

./src/kernels/eki/../../include/ldm.cuh(320): error: variable "d_time_end" has already been defined (previous definition at line 215 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_time_end;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(321): error: variable "d_dt" has already been defined (previous definition at line 216 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_dt;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(322): error: variable "d_freq_output" has already been defined (previous definition at line 217 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_freq_output;
                                ^

./src/kernels/eki/../../include/ldm.cuh(323): error: variable "d_nop" has already been defined (previous definition at line 218 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_nop;
                                ^

./src/kernels/eki/../../include/ldm.cuh(324): error: variable "d_isRural" has already been defined (previous definition at line 219 of src/init/../core/ldm.cuh)
  __attribute__((constant)) bool d_isRural;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(325): error: variable "d_isPG" has already been defined (previous definition at line 220 of src/init/../core/ldm.cuh)
  __attribute__((constant)) bool d_isPG;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(326): error: variable "d_isGFS" has already been defined (previous definition at line 221 of src/init/../core/ldm.cuh)
  __attribute__((constant)) bool d_isGFS;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(327): error: variable "d_vsetaver" has already been defined (previous definition at line 222 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_vsetaver;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(328): error: variable "d_cunningham" has already been defined (previous definition at line 223 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_cunningham;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(330): error: variable "d_start_lat" has already been defined (previous definition at line 225 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_start_lat;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(331): error: variable "d_start_lon" has already been defined (previous definition at line 226 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_start_lon;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(332): error: variable "d_lat_step" has already been defined (previous definition at line 227 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_lat_step;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(333): error: variable "d_lon_step" has already been defined (previous definition at line 228 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_lon_step;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(336): error: variable "flex_hgt" has already been defined (previous definition at line 231 of src/init/../core/ldm.cuh)
  std::vector<float> flex_hgt;
                     ^

./src/kernels/eki/../../include/ldm.cuh(339): error: variable "d_flex_hgt" has already been defined (previous definition at line 234 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_flex_hgt[50];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(340): error: variable "T_const" has already been defined (previous definition at line 235 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float T_const[60 * 60];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(342): error: variable "d_uWind" has already been defined (previous definition at line 237 of src/init/../core/ldm.cuh)
  __attribute__((device)) double d_uWind[512];
                                 ^

./src/kernels/eki/../../include/ldm.cuh(343): error: variable "d_vWind" has already been defined (previous definition at line 238 of src/init/../core/ldm.cuh)
  __attribute__((device)) double d_vWind[512];
                                 ^

./src/kernels/eki/../../include/ldm.cuh(345): error: class "LDM" has already been defined (previous definition at line 240 of src/init/../core/ldm.cuh)
  class LDM
        ^

make: *** [Makefile:122: objectfiles/src/simulation/ldm_func_particle.o] Error 2
./src/kernels/eki/../../include/ldm.cuh(438): error: a reference of type "EKIConfig &" (not const-qualified) cannot be initialized with a value of type "EKIConfig"
      EKIConfig& getEKIConfig() { return g_eki; }
                                         ^

./src/kernels/eki/../../include/ldm.cuh(629): error: no suitable user-defined conversion from "EKIConfig" to "const EKIConfig" exists
      const EKIConfig& getEKIConfig() const { return g_eki; }
                                                     ^

./src/kernels/eki/../../include/ldm.cuh(664): error: variable "PROCESS_INDEX" has already been defined (previous definition at line 559 of src/init/../core/ldm.cuh)
  constexpr int PROCESS_INDEX = 0;
                ^

./src/kernels/eki/../../include/ldm.cuh(668): error: class "GridConfig" has already been defined (previous definition at line 563 of src/init/../core/ldm.cuh)
  struct GridConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(678): error: cannot overload functions distinguished by return type alone
  GridConfig loadGridConfig() {
             ^

25 errors detected in the compilation of "src/simulation/ldm_func_output.cu".
25 errors detected in the compilation of "src/kernels/eki/ldm_kernels_eki.cu".
./src/kernels/eki/../../include/ldm.cuh(48): error: variable "d_turb_switch" has already been defined (previous definition at line 48 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_turb_switch;
                                ^

./src/kernels/eki/../../include/ldm.cuh(49): error: variable "d_drydep" has already been defined (previous definition at line 49 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_drydep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(50): error: variable "d_wetdep" has already been defined (previous definition at line 50 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_wetdep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(51): error: variable "d_raddecay" has already been defined (previous definition at line 51 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_raddecay;
                                ^

./src/kernels/eki/../../include/ldm.cuh(63): error: class "SimulationConfig" has already been defined (previous definition at line 63 of src/visualization/../core/ldm.cuh)
  struct SimulationConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(69): error: expected a ")"
      bool (g_sim.isRural);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: expected a ")"
      bool (g_sim.isGFS);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: "g_sim" has already been declared in the current scope
      bool (g_sim.isGFS);
            ^

./src/kernels/eki/../../include/ldm.cuh(76): error: class "MPIConfig" has already been defined (previous definition at line 76 of src/visualization/../core/ldm.cuh)
  struct MPIConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(87): error: class "EKIConfig" has already been defined (previous definition at line 87 of src/visualization/../core/ldm.cuh)
  struct EKIConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(131): error: class "EKIMeteorologicalData" has already been defined (previous definition at line 131 of src/visualization/../core/ldm.cuh)
  struct EKIMeteorologicalData {
         ^

./src/kernels/eki/../../include/ldm.cuh(48): error: variable "d_turb_switch" has already been defined (previous definition at line 48 of src/core/ldm.cuh)
  __attribute__((constant)) int d_turb_switch;
                                ^

./src/kernels/eki/../../include/ldm.cuh(49): error: variable "d_drydep" has already been defined (previous definition at line 49 of src/core/ldm.cuh)
  __attribute__((constant)) int d_drydep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(50): error: variable "d_wetdep" has already been defined (previous definition at line 50 of src/core/ldm.cuh)
  __attribute__((constant)) int d_wetdep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(51): error: variable "d_raddecay" has already been defined (previous definition at line 51 of src/core/ldm.cuh)
  __attribute__((constant)) int d_raddecay;
                                ^

./src/kernels/eki/../../include/ldm.cuh(63): error: class "SimulationConfig" has already been defined (previous definition at line 63 of src/core/ldm.cuh)
  struct SimulationConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(69): error: expected a ")"
      bool (g_sim.isRural);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: expected a ")"
      bool (g_sim.isGFS);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: "g_sim" has already been declared in the current scope
      bool (g_sim.isGFS);
            ^

./src/kernels/eki/../../include/ldm.cuh(76): error: class "MPIConfig" has already been defined (previous definition at line 76 of src/core/ldm.cuh)
  struct MPIConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(87): error: class "EKIConfig" has already been defined (previous definition at line 87 of src/core/ldm.cuh)
  struct EKIConfig {
         ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/kernels/eki/../../include/ldm.cuh(131): error: class "EKIMeteorologicalData" has already been defined (previous definition at line 131 of src/core/ldm.cuh)
  struct EKIMeteorologicalData {
         ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

./src/kernels/eki/../../include/ldm.cuh(270): error: variable "g_sim" has already been defined (previous definition at line 165 of src/visualization/../core/ldm.cuh)
  SimulationConfig g_sim;
                   ^

./src/kernels/eki/../../include/ldm.cuh(271): error: variable "g_mpi" has already been defined (previous definition at line 166 of src/visualization/../core/ldm.cuh)
  MPIConfig g_mpi;
            ^

./src/kernels/eki/../../include/ldm.cuh(272): error: variable "g_eki" has already been defined (previous definition at line 167 of src/visualization/../core/ldm.cuh)
  EKIConfig g_eki;
            ^

./src/kernels/eki/../../include/ldm.cuh(273): error: variable "g_config" has already been defined (previous definition at line 168 of src/visualization/../core/ldm.cuh)
  ConfigReader g_config;
               ^

./src/kernels/eki/../../include/ldm.cuh(276): error: variable "g_eki_meteo" has already been defined (previous definition at line 171 of src/visualization/../core/ldm.cuh)
  EKIMeteorologicalData g_eki_meteo;
                        ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_E" has already been defined (previous definition at line 176 of src/visualization/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_W" has already been defined (previous definition at line 176 of src/visualization/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                         ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_N" has already been defined (previous definition at line 176 of src/visualization/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_S" has already been defined (previous definition at line 176 of src/visualization/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                                              ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimX" has already been defined (previous definition at line 177 of src/visualization/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                    ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimY" has already been defined (previous definition at line 177 of src/visualization/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_pres" has already been defined (previous definition at line 177 of src/visualization/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                            ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_etas" has already been defined (previous definition at line 177 of src/visualization/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimX_GFS" has already been defined (previous definition at line 178 of src/visualization/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimY_GFS" has already been defined (previous definition at line 178 of src/visualization/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimZ_GFS" has already been defined (previous definition at line 178 of src/visualization/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                                    ^

./src/kernels/eki/../../include/ldm.cuh(284): error: variable "Constants::time_interval" has already been defined (previous definition at line 179 of src/visualization/../core/ldm.cuh)
      constexpr int time_interval = 10800;
                    ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_trop" has already been defined (previous definition at line 182 of src/visualization/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_strat" has already been defined (previous definition at line 182 of src/visualization/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::turbmesoscale" has already been defined (previous definition at line 182 of src/visualization/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::r_earth" has already been defined (previous definition at line 182 of src/visualization/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                                             ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_myl" has already been defined (previous definition at line 183 of src/visualization/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_nyl" has already been defined (previous definition at line 183 of src/visualization/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                       ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_lam" has already been defined (previous definition at line 183 of src/visualization/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                        ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_kb" has already been defined (previous definition at line 183 of src/visualization/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                                         ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_eps" has already been defined (previous definition at line 184 of src/visualization/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_Tr" has already been defined (previous definition at line 184 of src/visualization/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                       ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_rair" has already been defined (previous definition at line 184 of src/visualization/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_ga" has already been defined (previous definition at line 184 of src/visualization/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                       ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_href" has already been defined (previous definition at line 184 of src/visualization/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                                    ^

./src/kernels/eki/../../include/ldm.cuh(290): error: variable "Constants::_nspec" has already been defined (previous definition at line 185 of src/visualization/../core/ldm.cuh)
      constexpr int _nspec = 19;
                    ^

./src/kernels/eki/../../include/ldm.cuh(291): error: variable "Constants::NI" has already been defined (previous definition at line 186 of src/visualization/../core/ldm.cuh)
      constexpr int NI = 11;
                    ^

./src/kernels/eki/../../include/ldm.cuh(292): error: expected an identifier
      constexpr int 60 = 60;
                    ^

./src/kernels/eki/../../include/ldm.cuh(320): error: variable "d_time_end" has already been defined (previous definition at line 215 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_time_end;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(321): error: variable "d_dt" has already been defined (previous definition at line 216 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_dt;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(322): error: variable "d_freq_output" has already been defined (previous definition at line 217 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_freq_output;
                                ^

./src/kernels/eki/../../include/ldm.cuh(323): error: variable "d_nop" has already been defined (previous definition at line 218 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_nop;
                                ^

./src/kernels/eki/../../include/ldm.cuh(324): error: variable "d_isRural" has already been defined (previous definition at line 219 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) bool d_isRural;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(325): error: variable "d_isPG" has already been defined (previous definition at line 220 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) bool d_isPG;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(326): error: variable "d_isGFS" has already been defined (previous definition at line 221 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) bool d_isGFS;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(327): error: variable "d_vsetaver" has already been defined (previous definition at line 222 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_vsetaver;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(328): error: variable "d_cunningham" has already been defined (previous definition at line 223 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_cunningham;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(330): error: variable "d_start_lat" has already been defined (previous definition at line 225 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_start_lat;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(331): error: variable "d_start_lon" has already been defined (previous definition at line 226 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_start_lon;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(332): error: variable "d_lat_step" has already been defined (previous definition at line 227 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_lat_step;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(333): error: variable "d_lon_step" has already been defined (previous definition at line 228 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_lon_step;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(336): error: variable "flex_hgt" has already been defined (previous definition at line 231 of src/visualization/../core/ldm.cuh)
  std::vector<float> flex_hgt;
                     ^

./src/kernels/eki/../../include/ldm.cuh(339): error: variable "d_flex_hgt" has already been defined (previous definition at line 234 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_flex_hgt[50];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(340): error: variable "T_const" has already been defined (previous definition at line 235 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float T_const[60 * 60];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(342): error: variable "d_uWind" has already been defined (previous definition at line 237 of src/visualization/../core/ldm.cuh)
  __attribute__((device)) double d_uWind[512];
                                 ^

./src/kernels/eki/../../include/ldm.cuh(343): error: variable "d_vWind" has already been defined (previous definition at line 238 of src/visualization/../core/ldm.cuh)
  __attribute__((device)) double d_vWind[512];
                                 ^

./src/kernels/eki/../../include/ldm.cuh(345): error: class "LDM" has already been defined (previous definition at line 240 of src/visualization/../core/ldm.cuh)
  class LDM
        ^

25 errors detected in the compilation of "src/data/meteo/ldm_mdata_loading.cu".
./src/include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

31 errors detected in the compilation of "src/physics/ldm_cram2.cu".
./src/kernels/eki/../../include/ldm.cuh(270): error: variable "g_sim" has already been defined (previous definition at line 165 of src/core/ldm.cuh)
  SimulationConfig g_sim;
                   ^

./src/kernels/eki/../../include/ldm.cuh(271): error: variable "g_mpi" has already been defined (previous definition at line 166 of src/core/ldm.cuh)
  MPIConfig g_mpi;
            ^

./src/kernels/eki/../../include/ldm.cuh(272): error: variable "g_eki" has already been defined (previous definition at line 167 of src/core/ldm.cuh)
  EKIConfig g_eki;
            ^

./src/kernels/eki/../../include/ldm.cuh(273): error: variable "g_config" has already been defined (previous definition at line 168 of src/core/ldm.cuh)
  ConfigReader g_config;
               ^

./src/kernels/eki/../../include/ldm.cuh(276): error: variable "g_eki_meteo" has already been defined (previous definition at line 171 of src/core/ldm.cuh)
  EKIMeteorologicalData g_eki_meteo;
                        ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_E" has already been defined (previous definition at line 176 of src/core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_W" has already been defined (previous definition at line 176 of src/core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                         ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_N" has already been defined (previous definition at line 176 of src/core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_S" has already been defined (previous definition at line 176 of src/core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                                              ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimX" has already been defined (previous definition at line 177 of src/core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                    ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimY" has already been defined (previous definition at line 177 of src/core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_pres" has already been defined (previous definition at line 177 of src/core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                            ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_etas" has already been defined (previous definition at line 177 of src/core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimX_GFS" has already been defined (previous definition at line 178 of src/core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimY_GFS" has already been defined (previous definition at line 178 of src/core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimZ_GFS" has already been defined (previous definition at line 178 of src/core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                                    ^

./src/kernels/eki/../../include/ldm.cuh(284): error: variable "Constants::time_interval" has already been defined (previous definition at line 179 of src/core/ldm.cuh)
      constexpr int time_interval = 10800;
                    ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_trop" has already been defined (previous definition at line 182 of src/core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_strat" has already been defined (previous definition at line 182 of src/core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::turbmesoscale" has already been defined (previous definition at line 182 of src/core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::r_earth" has already been defined (previous definition at line 182 of src/core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                                             ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_myl" has already been defined (previous definition at line 183 of src/core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_nyl" has already been defined (previous definition at line 183 of src/core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                       ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_lam" has already been defined (previous definition at line 183 of src/core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                        ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_kb" has already been defined (previous definition at line 183 of src/core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                                         ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_eps" has already been defined (previous definition at line 184 of src/core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(438): error: a reference of type "EKIConfig &" (not const-qualified) cannot be initialized with a value of type "EKIConfig"
      EKIConfig& getEKIConfig() { return g_eki; }
                                         ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_Tr" has already been defined (previous definition at line 184 of src/core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                       ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_rair" has already been defined (previous definition at line 184 of src/core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_ga" has already been defined (previous definition at line 184 of src/core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                       ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_href" has already been defined (previous definition at line 184 of src/core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                                    ^

./src/kernels/eki/../../include/ldm.cuh(290): error: variable "Constants::_nspec" has already been defined (previous definition at line 185 of src/core/ldm.cuh)
      constexpr int _nspec = 19;
                    ^

./src/kernels/eki/../../include/ldm.cuh(291): error: variable "Constants::NI" has already been defined (previous definition at line 186 of src/core/ldm.cuh)
      constexpr int NI = 11;
                    ^

./src/kernels/eki/../../include/ldm.cuh(292): error: expected an identifier
      constexpr int 60 = 60;
                    ^

./src/kernels/eki/../../include/ldm.cuh(320): error: variable "d_time_end" has already been defined (previous definition at line 215 of src/core/ldm.cuh)
  __attribute__((constant)) float d_time_end;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(321): error: variable "d_dt" has already been defined (previous definition at line 216 of src/core/ldm.cuh)
  __attribute__((constant)) float d_dt;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(322): error: variable "d_freq_output" has already been defined (previous definition at line 217 of src/core/ldm.cuh)
  __attribute__((constant)) int d_freq_output;
                                ^

./src/kernels/eki/../../include/ldm.cuh(323): error: variable "d_nop" has already been defined (previous definition at line 218 of src/core/ldm.cuh)
  __attribute__((constant)) int d_nop;
                                ^

./src/kernels/eki/../../include/ldm.cuh(324): error: variable "d_isRural" has already been defined (previous definition at line 219 of src/core/ldm.cuh)
  __attribute__((constant)) bool d_isRural;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(325): error: variable "d_isPG" has already been defined (previous definition at line 220 of src/core/ldm.cuh)
  __attribute__((constant)) bool d_isPG;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(326): error: variable "d_isGFS" has already been defined (previous definition at line 221 of src/core/ldm.cuh)
  __attribute__((constant)) bool d_isGFS;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(327): error: variable "d_vsetaver" has already been defined (previous definition at line 222 of src/core/ldm.cuh)
  __attribute__((constant)) float d_vsetaver;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(328): error: variable "d_cunningham" has already been defined (previous definition at line 223 of src/core/ldm.cuh)
  __attribute__((constant)) float d_cunningham;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(330): error: variable "d_start_lat" has already been defined (previous definition at line 225 of src/core/ldm.cuh)
  __attribute__((constant)) float d_start_lat;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(331): error: variable "d_start_lon" has already been defined (previous definition at line 226 of src/core/ldm.cuh)
  __attribute__((constant)) float d_start_lon;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(332): error: variable "d_lat_step" has already been defined (previous definition at line 227 of src/core/ldm.cuh)
  __attribute__((constant)) float d_lat_step;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(333): error: variable "d_lon_step" has already been defined (previous definition at line 228 of src/core/ldm.cuh)
  __attribute__((constant)) float d_lon_step;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(336): error: variable "flex_hgt" has already been defined (previous definition at line 231 of src/core/ldm.cuh)
  std::vector<float> flex_hgt;
                     ^

./src/kernels/eki/../../include/ldm.cuh(339): error: variable "d_flex_hgt" has already been defined (previous definition at line 234 of src/core/ldm.cuh)
  __attribute__((constant)) float d_flex_hgt[50];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(340): error: variable "T_const" has already been defined (previous definition at line 235 of src/core/ldm.cuh)
  __attribute__((constant)) float T_const[60 * 60];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(342): error: variable "d_uWind" has already been defined (previous definition at line 237 of src/core/ldm.cuh)
  __attribute__((device)) double d_uWind[512];
                                 ^

./src/kernels/eki/../../include/ldm.cuh(343): error: variable "d_vWind" has already been defined (previous definition at line 238 of src/core/ldm.cuh)
  __attribute__((device)) double d_vWind[512];
                                 ^

./src/kernels/eki/../../include/ldm.cuh(629): error: no suitable user-defined conversion from "EKIConfig" to "const EKIConfig" exists
      const EKIConfig& getEKIConfig() const { return g_eki; }
                                                     ^

./src/kernels/eki/../../include/ldm.cuh(664): error: variable "PROCESS_INDEX" has already been defined (previous definition at line 559 of src/visualization/../core/ldm.cuh)
  constexpr int PROCESS_INDEX = 0;
                ^

./src/kernels/eki/../../include/ldm.cuh(668): error: class "GridConfig" has already been defined (previous definition at line 563 of src/visualization/../core/ldm.cuh)
  struct GridConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(345): error: class "LDM" has already been defined (previous definition at line 240 of src/core/ldm.cuh)
  class LDM
        ^

./src/kernels/eki/../../include/ldm.cuh(678): error: cannot overload functions distinguished by return type alone
  GridConfig loadGridConfig() {
             ^

./src/kernels/eki/../../include/ldm.cuh(48): error: variable "d_turb_switch" has already been defined (previous definition at line 48 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_turb_switch;
                                ^

./src/kernels/eki/../../include/ldm.cuh(49): error: variable "d_drydep" has already been defined (previous definition at line 49 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_drydep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(50): error: variable "d_wetdep" has already been defined (previous definition at line 50 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_wetdep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(51): error: variable "d_raddecay" has already been defined (previous definition at line 51 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_raddecay;
                                ^

./src/kernels/eki/../../include/ldm.cuh(63): error: class "SimulationConfig" has already been defined (previous definition at line 63 of src/visualization/../core/ldm.cuh)
  struct SimulationConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(69): error: expected a ")"
      bool (g_sim.isRural);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: expected a ")"
      bool (g_sim.isGFS);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: "g_sim" has already been declared in the current scope
      bool (g_sim.isGFS);
            ^

./src/kernels/eki/../../include/ldm.cuh(76): error: class "MPIConfig" has already been defined (previous definition at line 76 of src/visualization/../core/ldm.cuh)
  struct MPIConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(87): error: class "EKIConfig" has already been defined (previous definition at line 87 of src/visualization/../core/ldm.cuh)
  struct EKIConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(131): error: class "EKIMeteorologicalData" has already been defined (previous definition at line 131 of src/visualization/../core/ldm.cuh)
  struct EKIMeteorologicalData {
         ^

./src/kernels/eki/../../include/ldm.cuh(438): error: a reference of type "EKIConfig &" (not const-qualified) cannot be initialized with a value of type "EKIConfig"
      EKIConfig& getEKIConfig() { return g_eki; }
                                         ^

./src/kernels/eki/../../include/ldm.cuh(629): error: no suitable user-defined conversion from "EKIConfig" to "const EKIConfig" exists
      const EKIConfig& getEKIConfig() const { return g_eki; }
                                                     ^

./src/kernels/eki/../../include/ldm.cuh(664): error: variable "PROCESS_INDEX" has already been defined (previous definition at line 559 of src/core/ldm.cuh)
  constexpr int PROCESS_INDEX = 0;
                ^

./src/kernels/eki/../../include/ldm.cuh(668): error: class "GridConfig" has already been defined (previous definition at line 563 of src/core/ldm.cuh)
  struct GridConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(678): error: cannot overload functions distinguished by return type alone
  GridConfig loadGridConfig() {
             ^

25 errors detected in the compilation of "src/data/meteo/ldm_mdata_processing.cu".
./src/kernels/eki/../../include/ldm.cuh(270): error: variable "g_sim" has already been defined (previous definition at line 165 of src/visualization/../core/ldm.cuh)
  SimulationConfig g_sim;
                   ^

./src/kernels/eki/../../include/ldm.cuh(271): error: variable "g_mpi" has already been defined (previous definition at line 166 of src/visualization/../core/ldm.cuh)
  MPIConfig g_mpi;
            ^

./src/kernels/eki/../../include/ldm.cuh(272): error: variable "g_eki" has already been defined (previous definition at line 167 of src/visualization/../core/ldm.cuh)
  EKIConfig g_eki;
            ^

./src/kernels/eki/../../include/ldm.cuh(273): error: variable "g_config" has already been defined (previous definition at line 168 of src/visualization/../core/ldm.cuh)
  ConfigReader g_config;
               ^

./src/kernels/eki/../../include/ldm.cuh(276): error: variable "g_eki_meteo" has already been defined (previous definition at line 171 of src/visualization/../core/ldm.cuh)
  EKIMeteorologicalData g_eki_meteo;
                        ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_E" has already been defined (previous definition at line 176 of src/visualization/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_W" has already been defined (previous definition at line 176 of src/visualization/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                         ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_N" has already been defined (previous definition at line 176 of src/visualization/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_S" has already been defined (previous definition at line 176 of src/visualization/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                                              ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimX" has already been defined (previous definition at line 177 of src/visualization/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                    ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimY" has already been defined (previous definition at line 177 of src/visualization/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_pres" has already been defined (previous definition at line 177 of src/visualization/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                            ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_etas" has already been defined (previous definition at line 177 of src/visualization/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimX_GFS" has already been defined (previous definition at line 178 of src/visualization/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimY_GFS" has already been defined (previous definition at line 178 of src/visualization/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimZ_GFS" has already been defined (previous definition at line 178 of src/visualization/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                                    ^

./src/kernels/eki/../../include/ldm.cuh(284): error: variable "Constants::time_interval" has already been defined (previous definition at line 179 of src/visualization/../core/ldm.cuh)
      constexpr int time_interval = 10800;
                    ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_trop" has already been defined (previous definition at line 182 of src/visualization/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_strat" has already been defined (previous definition at line 182 of src/visualization/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::turbmesoscale" has already been defined (previous definition at line 182 of src/visualization/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::r_earth" has already been defined (previous definition at line 182 of src/visualization/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                                             ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_myl" has already been defined (previous definition at line 183 of src/visualization/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                      ^

src/ipc/../include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_nyl" has already been defined (previous definition at line 183 of src/visualization/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                       ^

src/ipc/../include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_lam" has already been defined (previous definition at line 183 of src/visualization/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                        ^

src/ipc/../include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_kb" has already been defined (previous definition at line 183 of src/visualization/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                                         ^

src/ipc/../include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_eps" has already been defined (previous definition at line 184 of src/visualization/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                      ^

src/ipc/../include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_Tr" has already been defined (previous definition at line 184 of src/visualization/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                       ^

src/ipc/../include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

src/ipc/../include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_rair" has already been defined (previous definition at line 184 of src/visualization/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_ga" has already been defined (previous definition at line 184 of src/visualization/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                       ^

src/ipc/../include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_href" has already been defined (previous definition at line 184 of src/visualization/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                                    ^

src/ipc/../include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/kernels/eki/../../include/ldm.cuh(290): error: variable "Constants::_nspec" has already been defined (previous definition at line 185 of src/visualization/../core/ldm.cuh)
      constexpr int _nspec = 19;
                    ^

src/ipc/../include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/kernels/eki/../../include/ldm.cuh(291): error: variable "Constants::NI" has already been defined (previous definition at line 186 of src/visualization/../core/ldm.cuh)
      constexpr int NI = 11;
                    ^

src/ipc/../include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/kernels/eki/../../include/ldm.cuh(292): error: expected an identifier
      constexpr int 60 = 60;
                    ^

src/ipc/../include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/kernels/eki/../../include/ldm.cuh(320): error: variable "d_time_end" has already been defined (previous definition at line 215 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_time_end;
                                  ^

src/ipc/../include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

src/ipc/../include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/kernels/eki/../../include/ldm.cuh(321): error: variable "d_dt" has already been defined (previous definition at line 216 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_dt;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(322): error: variable "d_freq_output" has already been defined (previous definition at line 217 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_freq_output;
                                ^

src/ipc/../include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

src/ipc/../include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/kernels/eki/../../include/ldm.cuh(323): error: variable "d_nop" has already been defined (previous definition at line 218 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) int d_nop;
                                ^

./src/kernels/eki/../../include/ldm.cuh(324): error: variable "d_isRural" has already been defined (previous definition at line 219 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) bool d_isRural;
                                 ^

src/ipc/../include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/ldm.cuh(325): error: variable "d_isPG" has already been defined (previous definition at line 220 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) bool d_isPG;
                                 ^

src/ipc/../include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/kernels/eki/../../include/ldm.cuh(326): error: variable "d_isGFS" has already been defined (previous definition at line 221 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) bool d_isGFS;
                                 ^

src/ipc/../include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/kernels/eki/../../include/ldm.cuh(327): error: variable "d_vsetaver" has already been defined (previous definition at line 222 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_vsetaver;
                                  ^

src/ipc/../include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/kernels/eki/../../include/ldm.cuh(328): error: variable "d_cunningham" has already been defined (previous definition at line 223 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_cunningham;
                                  ^

src/ipc/../include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/kernels/eki/../../include/ldm.cuh(330): error: variable "d_start_lat" has already been defined (previous definition at line 225 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_start_lat;
                                  ^

src/ipc/../include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/kernels/eki/../../include/ldm.cuh(331): error: variable "d_start_lon" has already been defined (previous definition at line 226 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_start_lon;
                                  ^

src/ipc/../include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

src/ipc/../include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/kernels/eki/../../include/ldm.cuh(332): error: variable "d_lat_step" has already been defined (previous definition at line 227 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_lat_step;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(333): error: variable "d_lon_step" has already been defined (previous definition at line 228 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_lon_step;
                                  ^

src/ipc/../include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

./src/kernels/eki/../../include/ldm.cuh(336): error: variable "flex_hgt" has already been defined (previous definition at line 231 of src/visualization/../core/ldm.cuh)
  std::vector<float> flex_hgt;
                     ^

./src/kernels/eki/../../include/ldm.cuh(339): error: variable "d_flex_hgt" has already been defined (previous definition at line 234 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float d_flex_hgt[50];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(340): error: variable "T_const" has already been defined (previous definition at line 235 of src/visualization/../core/ldm.cuh)
  __attribute__((constant)) float T_const[60 * 60];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(342): error: variable "d_uWind" has already been defined (previous definition at line 237 of src/visualization/../core/ldm.cuh)
  __attribute__((device)) double d_uWind[512];
                                 ^

./src/kernels/eki/../../include/ldm.cuh(343): error: variable "d_vWind" has already been defined (previous definition at line 238 of src/visualization/../core/ldm.cuh)
  __attribute__((device)) double d_vWind[512];
                                 ^

./src/kernels/eki/../../include/ldm.cuh(345): error: class "LDM" has already been defined (previous definition at line 240 of src/visualization/../core/ldm.cuh)
  class LDM
        ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

make: *** [Makefile:122: objectfiles/src/simulation/ldm_func_output.o] Error 2
./src/kernels/eki/../../include/ldm.cuh(48): error: variable "d_turb_switch" has already been defined (previous definition at line 48 of src/core/ldm.cuh)
  __attribute__((constant)) int d_turb_switch;
                                ^

./src/kernels/eki/../../include/ldm.cuh(49): error: variable "d_drydep" has already been defined (previous definition at line 49 of src/core/ldm.cuh)
  __attribute__((constant)) int d_drydep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(50): error: variable "d_wetdep" has already been defined (previous definition at line 50 of src/core/ldm.cuh)
  __attribute__((constant)) int d_wetdep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(51): error: variable "d_raddecay" has already been defined (previous definition at line 51 of src/core/ldm.cuh)
  __attribute__((constant)) int d_raddecay;
                                ^

./src/kernels/eki/../../include/ldm.cuh(63): error: class "SimulationConfig" has already been defined (previous definition at line 63 of src/core/ldm.cuh)
  struct SimulationConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(69): error: expected a ")"
      bool (g_sim.isRural);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: expected a ")"
      bool (g_sim.isGFS);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: "g_sim" has already been declared in the current scope
      bool (g_sim.isGFS);
            ^

./src/kernels/eki/../../include/ldm.cuh(76): error: class "MPIConfig" has already been defined (previous definition at line 76 of src/core/ldm.cuh)
  struct MPIConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(87): error: class "EKIConfig" has already been defined (previous definition at line 87 of src/core/ldm.cuh)
  struct EKIConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(131): error: class "EKIMeteorologicalData" has already been defined (previous definition at line 131 of src/core/ldm.cuh)
  struct EKIMeteorologicalData {
         ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

./src/kernels/eki/../../include/ldm.cuh(438): error: a reference of type "EKIConfig &" (not const-qualified) cannot be initialized with a value of type "EKIConfig"
      EKIConfig& getEKIConfig() { return g_eki; }
                                         ^

./src/kernels/eki/../../include/ldm.cuh(629): error: no suitable user-defined conversion from "EKIConfig" to "const EKIConfig" exists
      const EKIConfig& getEKIConfig() const { return g_eki; }
                                                     ^

./src/kernels/eki/../../include/ldm.cuh(664): error: variable "PROCESS_INDEX" has already been defined (previous definition at line 559 of src/visualization/../core/ldm.cuh)
  constexpr int PROCESS_INDEX = 0;
                ^

./src/kernels/eki/../../include/ldm.cuh(668): error: class "GridConfig" has already been defined (previous definition at line 563 of src/visualization/../core/ldm.cuh)
  struct GridConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(678): error: cannot overload functions distinguished by return type alone
  GridConfig loadGridConfig() {
             ^

make: *** [Makefile:122: objectfiles/src/kernels/eki/ldm_kernels_eki.o] Error 2
./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

src/core/ldm.cu(12): error: function "EKIMeteorologicalData::~EKIMeteorologicalData" has already been defined (previous definition at line 159 of ./src/kernels/eki/../../include/ldm.cuh)
  EKIMeteorologicalData::~EKIMeteorologicalData() {
                         ^

src/core/ldm.cu(16): error: function "EKIMeteorologicalData::cleanup" has already been defined (previous definition at line 163 of ./src/kernels/eki/../../include/ldm.cuh)
  void EKIMeteorologicalData::cleanup() {
                              ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

./src/kernels/eki/../../include/ldm.cuh(270): error: variable "g_sim" has already been defined (previous definition at line 165 of src/core/ldm.cuh)
  SimulationConfig g_sim;
                   ^

./src/kernels/eki/../../include/ldm.cuh(271): error: variable "g_mpi" has already been defined (previous definition at line 166 of src/core/ldm.cuh)
  MPIConfig g_mpi;
            ^

./src/kernels/eki/../../include/ldm.cuh(272): error: variable "g_eki" has already been defined (previous definition at line 167 of src/core/ldm.cuh)
  EKIConfig g_eki;
            ^

./src/kernels/eki/../../include/ldm.cuh(273): error: variable "g_config" has already been defined (previous definition at line 168 of src/core/ldm.cuh)
  ConfigReader g_config;
               ^

./src/kernels/eki/../../include/ldm.cuh(276): error: variable "g_eki_meteo" has already been defined (previous definition at line 171 of src/core/ldm.cuh)
  EKIMeteorologicalData g_eki_meteo;
                        ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_E" has already been defined (previous definition at line 176 of src/core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_W" has already been defined (previous definition at line 176 of src/core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                         ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_N" has already been defined (previous definition at line 176 of src/core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_S" has already been defined (previous definition at line 176 of src/core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                                              ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimX" has already been defined (previous definition at line 177 of src/core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                    ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimY" has already been defined (previous definition at line 177 of src/core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_pres" has already been defined (previous definition at line 177 of src/core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                            ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_etas" has already been defined (previous definition at line 177 of src/core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimX_GFS" has already been defined (previous definition at line 178 of src/core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimY_GFS" has already been defined (previous definition at line 178 of src/core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimZ_GFS" has already been defined (previous definition at line 178 of src/core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                                    ^

./src/kernels/eki/../../include/ldm.cuh(284): error: variable "Constants::time_interval" has already been defined (previous definition at line 179 of src/core/ldm.cuh)
      constexpr int time_interval = 10800;
                    ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_trop" has already been defined (previous definition at line 182 of src/core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_strat" has already been defined (previous definition at line 182 of src/core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::turbmesoscale" has already been defined (previous definition at line 182 of src/core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::r_earth" has already been defined (previous definition at line 182 of src/core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                                             ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_myl" has already been defined (previous definition at line 183 of src/core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_nyl" has already been defined (previous definition at line 183 of src/core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                       ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_lam" has already been defined (previous definition at line 183 of src/core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                        ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_kb" has already been defined (previous definition at line 183 of src/core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                                         ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_eps" has already been defined (previous definition at line 184 of src/core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_Tr" has already been defined (previous definition at line 184 of src/core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                       ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_rair" has already been defined (previous definition at line 184 of src/core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_ga" has already been defined (previous definition at line 184 of src/core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                       ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_href" has already been defined (previous definition at line 184 of src/core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                                    ^

./src/kernels/eki/../../include/ldm.cuh(290): error: variable "Constants::_nspec" has already been defined (previous definition at line 185 of src/core/ldm.cuh)
      constexpr int _nspec = 19;
                    ^

./src/kernels/eki/../../include/ldm.cuh(291): error: variable "Constants::NI" has already been defined (previous definition at line 186 of src/core/ldm.cuh)
      constexpr int NI = 11;
                    ^

./src/kernels/eki/../../include/ldm.cuh(292): error: expected an identifier
      constexpr int 60 = 60;
                    ^

./src/kernels/eki/../../include/ldm.cuh(320): error: variable "d_time_end" has already been defined (previous definition at line 215 of src/core/ldm.cuh)
  __attribute__((constant)) float d_time_end;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(321): error: variable "d_dt" has already been defined (previous definition at line 216 of src/core/ldm.cuh)
  __attribute__((constant)) float d_dt;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(322): error: variable "d_freq_output" has already been defined (previous definition at line 217 of src/core/ldm.cuh)
  __attribute__((constant)) int d_freq_output;
                                ^

./src/kernels/eki/../../include/ldm.cuh(323): error: variable "d_nop" has already been defined (previous definition at line 218 of src/core/ldm.cuh)
  __attribute__((constant)) int d_nop;
                                ^

./src/kernels/eki/../../include/ldm.cuh(324): error: variable "d_isRural" has already been defined (previous definition at line 219 of src/core/ldm.cuh)
  __attribute__((constant)) bool d_isRural;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(325): error: variable "d_isPG" has already been defined (previous definition at line 220 of src/core/ldm.cuh)
  __attribute__((constant)) bool d_isPG;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(326): error: variable "d_isGFS" has already been defined (previous definition at line 221 of src/core/ldm.cuh)
  __attribute__((constant)) bool d_isGFS;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(327): error: variable "d_vsetaver" has already been defined (previous definition at line 222 of src/core/ldm.cuh)
  __attribute__((constant)) float d_vsetaver;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(328): error: variable "d_cunningham" has already been defined (previous definition at line 223 of src/core/ldm.cuh)
  __attribute__((constant)) float d_cunningham;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(330): error: variable "d_start_lat" has already been defined (previous definition at line 225 of src/core/ldm.cuh)
  __attribute__((constant)) float d_start_lat;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(331): error: variable "d_start_lon" has already been defined (previous definition at line 226 of src/core/ldm.cuh)
  __attribute__((constant)) float d_start_lon;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(332): error: variable "d_lat_step" has already been defined (previous definition at line 227 of src/core/ldm.cuh)
  __attribute__((constant)) float d_lat_step;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(333): error: variable "d_lon_step" has already been defined (previous definition at line 228 of src/core/ldm.cuh)
  __attribute__((constant)) float d_lon_step;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(336): error: variable "flex_hgt" has already been defined (previous definition at line 231 of src/core/ldm.cuh)
  std::vector<float> flex_hgt;
                     ^

./src/kernels/eki/../../include/ldm.cuh(339): error: variable "d_flex_hgt" has already been defined (previous definition at line 234 of src/core/ldm.cuh)
  __attribute__((constant)) float d_flex_hgt[50];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(340): error: variable "T_const" has already been defined (previous definition at line 235 of src/core/ldm.cuh)
  __attribute__((constant)) float T_const[60 * 60];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(342): error: variable "d_uWind" has already been defined (previous definition at line 237 of src/core/ldm.cuh)
  __attribute__((device)) double d_uWind[512];
                                 ^

./src/kernels/eki/../../include/ldm.cuh(343): error: variable "d_vWind" has already been defined (previous definition at line 238 of src/core/ldm.cuh)
  __attribute__((device)) double d_vWind[512];
                                 ^

src/core/ldm.cu(126): error: cannot overload functions distinguished by return type alone
  GridConfig loadGridConfig() {
             ^

./src/kernels/eki/../../include/ldm.cuh(345): error: class "LDM" has already been defined (previous definition at line 240 of src/core/ldm.cuh)
  class LDM
        ^

make: *** [Makefile:122: objectfiles/src/data/meteo/ldm_mdata_loading.o] Error 2
make: *** [Makefile:122: objectfiles/src/physics/ldm_cram2.o] Error 2
./src/kernels/eki/../../include/ldm.cuh(438): error: a reference of type "EKIConfig &" (not const-qualified) cannot be initialized with a value of type "EKIConfig"
      EKIConfig& getEKIConfig() { return g_eki; }
                                         ^

./src/kernels/eki/../../include/ldm.cuh(629): error: no suitable user-defined conversion from "EKIConfig" to "const EKIConfig" exists
      const EKIConfig& getEKIConfig() const { return g_eki; }
                                                     ^

./src/kernels/eki/../../include/ldm.cuh(664): error: variable "PROCESS_INDEX" has already been defined (previous definition at line 559 of src/core/ldm.cuh)
  constexpr int PROCESS_INDEX = 0;
                ^

./src/kernels/eki/../../include/ldm.cuh(668): error: class "GridConfig" has already been defined (previous definition at line 563 of src/core/ldm.cuh)
  struct GridConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(678): error: cannot overload functions distinguished by return type alone
  GridConfig loadGridConfig() {
             ^

93 errors detected in the compilation of "src/init/ldm_init_config.cu".
./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

make: *** [Makefile:122: objectfiles/src/data/meteo/ldm_mdata_processing.o] Error 2
./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

96 errors detected in the compilation of "src/core/ldm.cu".
93 errors detected in the compilation of "src/visualization/ldm_plot_vtk.cu".
25 errors detected in the compilation of "src/ipc/ldm_eki_writer.cu".
25 errors detected in the compilation of "src/simulation/ldm_func_simulation.cu".
src/main_eki.cu(119): error: incomplete type "MemoryDoctor" is not allowed
      g_memory_doctor.setEnabled(ldm.getEKIConfig().memory_doctor_mode);
      ^

make: *** [Makefile:122: objectfiles/src/init/ldm_init_config.o] Error 2
./src/kernels/eki/../../include/ldm.cuh(48): error: variable "d_turb_switch" has already been defined (previous definition at line 48 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_turb_switch;
                                ^

./src/kernels/eki/../../include/ldm.cuh(49): error: variable "d_drydep" has already been defined (previous definition at line 49 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_drydep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(50): error: variable "d_wetdep" has already been defined (previous definition at line 50 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_wetdep;
                                ^

./src/kernels/eki/../../include/ldm.cuh(51): error: variable "d_raddecay" has already been defined (previous definition at line 51 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_raddecay;
                                ^

./src/kernels/eki/../../include/ldm.cuh(63): error: class "SimulationConfig" has already been defined (previous definition at line 63 of src/init/../core/ldm.cuh)
  struct SimulationConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(69): error: expected a ")"
      bool (g_sim.isRural);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: expected a ")"
      bool (g_sim.isGFS);
                 ^

./src/kernels/eki/../../include/ldm.cuh(71): error: "g_sim" has already been declared in the current scope
      bool (g_sim.isGFS);
            ^

./src/kernels/eki/../../include/ldm.cuh(76): error: class "MPIConfig" has already been defined (previous definition at line 76 of src/init/../core/ldm.cuh)
  struct MPIConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(87): error: class "EKIConfig" has already been defined (previous definition at line 87 of src/init/../core/ldm.cuh)
  struct EKIConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(131): error: class "EKIMeteorologicalData" has already been defined (previous definition at line 131 of src/init/../core/ldm.cuh)
  struct EKIMeteorologicalData {
         ^

93 errors detected in the compilation of "src/visualization/ldm_plot_utils.cu".
./src/kernels/eki/../../include/ldm.cuh(270): error: variable "g_sim" has already been defined (previous definition at line 165 of src/init/../core/ldm.cuh)
  SimulationConfig g_sim;
                   ^

./src/kernels/eki/../../include/ldm.cuh(271): error: variable "g_mpi" has already been defined (previous definition at line 166 of src/init/../core/ldm.cuh)
  MPIConfig g_mpi;
            ^

./src/kernels/eki/../../include/ldm.cuh(272): error: variable "g_eki" has already been defined (previous definition at line 167 of src/init/../core/ldm.cuh)
  EKIConfig g_eki;
            ^

./src/kernels/eki/../../include/ldm.cuh(273): error: variable "g_config" has already been defined (previous definition at line 168 of src/init/../core/ldm.cuh)
  ConfigReader g_config;
               ^

./src/kernels/eki/../../include/ldm.cuh(276): error: variable "g_eki_meteo" has already been defined (previous definition at line 171 of src/init/../core/ldm.cuh)
  EKIMeteorologicalData g_eki_meteo;
                        ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_E" has already been defined (previous definition at line 176 of src/init/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_W" has already been defined (previous definition at line 176 of src/init/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                         ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_N" has already been defined (previous definition at line 176 of src/init/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(281): error: variable "Constants::LDAPS_S" has already been defined (previous definition at line 176 of src/init/../core/ldm.cuh)
      constexpr float LDAPS_E = 132.36f, LDAPS_W = 121.06f, LDAPS_N = 43.13f, LDAPS_S = 32.20f;
                                                                              ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimX" has already been defined (previous definition at line 177 of src/init/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                    ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimY" has already been defined (previous definition at line 177 of src/init/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_pres" has already been defined (previous definition at line 177 of src/init/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                            ^

./src/kernels/eki/../../include/ldm.cuh(282): error: variable "Constants::dimZ_etas" has already been defined (previous definition at line 177 of src/init/../core/ldm.cuh)
      constexpr int dimX = 602, dimY = 781, dimZ_pres = 24, dimZ_etas = 71;
                                                            ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimX_GFS" has already been defined (previous definition at line 178 of src/init/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimY_GFS" has already been defined (previous definition at line 178 of src/init/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                    ^

./src/kernels/eki/../../include/ldm.cuh(283): error: variable "Constants::dimZ_GFS" has already been defined (previous definition at line 178 of src/init/../core/ldm.cuh)
      constexpr int dimX_GFS = 720, dimY_GFS = 361, dimZ_GFS = 26;
                                                    ^

./src/kernels/eki/../../include/ldm.cuh(284): error: variable "Constants::time_interval" has already been defined (previous definition at line 179 of src/init/../core/ldm.cuh)
      constexpr int time_interval = 10800;
                    ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_trop" has already been defined (previous definition at line 182 of src/init/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::d_strat" has already been defined (previous definition at line 182 of src/init/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::turbmesoscale" has already been defined (previous definition at line 182 of src/init/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(287): error: variable "Constants::r_earth" has already been defined (previous definition at line 182 of src/init/../core/ldm.cuh)
      constexpr float d_trop = 50.0f, d_strat = 0.1f, turbmesoscale = 0.16f, r_earth = 6371000.0f;
                                                                             ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_myl" has already been defined (previous definition at line 183 of src/init/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_nyl" has already been defined (previous definition at line 183 of src/init/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                       ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_lam" has already been defined (previous definition at line 183 of src/init/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                        ^

./src/kernels/eki/../../include/ldm.cuh(288): error: variable "Constants::_kb" has already been defined (previous definition at line 183 of src/init/../core/ldm.cuh)
      constexpr float _myl = 1.81e-5f, _nyl = 0.15e-4f, _lam = 6.53e-8f, _kb = 1.38e-23f;
                                                                         ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_eps" has already been defined (previous definition at line 184 of src/init/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                      ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_Tr" has already been defined (previous definition at line 184 of src/init/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                       ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_rair" has already been defined (previous definition at line 184 of src/init/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                      ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_ga" has already been defined (previous definition at line 184 of src/init/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                       ^

./src/kernels/eki/../../include/ldm.cuh(289): error: variable "Constants::_href" has already been defined (previous definition at line 184 of src/init/../core/ldm.cuh)
      constexpr float _eps = 1.2e-38f, _Tr = 293.15f, _rair = 287.05f, _ga = 9.81f, _href = 15.0f;
                                                                                    ^

./src/kernels/eki/../../include/ldm.cuh(290): error: variable "Constants::_nspec" has already been defined (previous definition at line 185 of src/init/../core/ldm.cuh)
      constexpr int _nspec = 19;
                    ^

./src/kernels/eki/../../include/ldm.cuh(291): error: variable "Constants::NI" has already been defined (previous definition at line 186 of src/init/../core/ldm.cuh)
      constexpr int NI = 11;
                    ^

./src/kernels/eki/../../include/ldm.cuh(292): error: expected an identifier
      constexpr int 60 = 60;
                    ^

./src/kernels/eki/../../include/ldm.cuh(320): error: variable "d_time_end" has already been defined (previous definition at line 215 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_time_end;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(321): error: variable "d_dt" has already been defined (previous definition at line 216 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_dt;
                                  ^

25 errors ./src/kernels/eki/../../include/ldm.cuh(322): error: variable "d_freq_output" has already been defined (previous definition at line 217 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_freq_output;
                                ^

./src/kernels/eki/../../include/ldm.cuh(323): error: variable "d_nop" has already been defined (previous definition at line 218 of src/init/../core/ldm.cuh)
  __attribute__((constant)) int d_nop;
                                ^

detected in the compilation of "src/data/meteo/ldm_mdata_cache.cu".
./src/kernels/eki/../../include/ldm.cuh(324): error: variable "d_isRural" has already been defined (previous definition at line 219 of src/init/../core/ldm.cuh)
  __attribute__((constant)) bool d_isRural;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(325): error: variable "d_isPG" has already been defined (previous definition at line 220 of src/init/../core/ldm.cuh)
  __attribute__((constant)) bool d_isPG;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(326): error: variable "d_isGFS" has already been defined (previous definition at line 221 of src/init/../core/ldm.cuh)
  __attribute__((constant)) bool d_isGFS;
                                 ^

./src/kernels/eki/../../include/ldm.cuh(327): error: variable "d_vsetaver" has already been defined (previous definition at line 222 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_vsetaver;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(328): error: variable "d_cunningham" has already been defined (previous definition at line 223 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_cunningham;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(330): error: variable "d_start_lat" has already been defined (previous definition at line 225 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_start_lat;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(331): error: variable "d_start_lon" has already been defined (previous definition at line 226 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_start_lon;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(332): error: variable "d_lat_step" has already been defined (previous definition at line 227 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_lat_step;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(333): error: variable "d_lon_step" has already been defined (previous definition at line 228 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_lon_step;
                                  ^

./src/kernels/eki/../../include/ldm.cuh(336): error: variable "flex_hgt" has already been defined (previous definition at line 231 of src/init/../core/ldm.cuh)
  std::vector<float> flex_hgt;
                     ^

./src/kernels/eki/../../include/ldm.cuh(339): error: variable "d_flex_hgt" has already been defined (previous definition at line 234 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float d_flex_hgt[50];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(340): error: variable "T_const" has already been defined (previous definition at line 235 of src/init/../core/ldm.cuh)
  __attribute__((constant)) float T_const[60 * 60];
                                  ^

./src/kernels/eki/../../include/ldm.cuh(342): error: variable "d_uWind" has already been defined (previous definition at line 237 of src/init/../core/ldm.cuh)
  __attribute__((device)) double d_uWind[512];
                                 ^

./src/kernels/eki/../../include/ldm.cuh(343): error: variable "d_vWind" has already been defined (previous definition at line 238 of src/init/../core/ldm.cuh)
  __attribute__((device)) double d_vWind[512];
                                 ^

./src/kernels/eki/../../include/ldm.cuh(345): error: class "LDM" has already been defined (previous definition at line 240 of src/init/../core/ldm.cuh)
  class LDM
        ^

./src/kernels/eki/../../include/ldm.cuh(438): error: a reference of type "EKIConfig &" (not const-qualified) cannot be initialized with a value of type "EKIConfig"
      EKIConfig& getEKIConfig() { return g_eki; }
                                         ^

./src/kernels/eki/../../include/ldm.cuh(629): error: no suitable user-defined conversion from "EKIConfig" to "const EKIConfig" exists
      const EKIConfig& getEKIConfig() const { return g_eki; }
                                                     ^

./src/kernels/eki/../../include/ldm.cuh(664): error: variable "PROCESS_INDEX" has already been defined (previous definition at line 559 of src/init/../core/ldm.cuh)
  constexpr int PROCESS_INDEX = 0;
                ^

./src/kernels/eki/../../include/ldm.cuh(668): error: class "GridConfig" has already been defined (previous definition at line 563 of src/init/../core/ldm.cuh)
  struct GridConfig {
         ^

./src/kernels/eki/../../include/ldm.cuh(678): error: cannot overload functions distinguished by return type alone
  GridConfig loadGridConfig() {
             ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(23): error: member function "LDM::initializeFlexGFSData" may not be redeclared outside its class
  void LDM::initializeFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(24): error: member function "LDM::loadFlexGFSData" may not be redeclared outside its class
  void LDM::loadFlexGFSData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_loading.cuh(25): error: member function "LDM::loadFlexHeightData" may not be redeclared outside its class
  void LDM::loadFlexHeightData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(23): error: member function "LDM::calculateRequiredMeteoFiles" may not be redeclared outside its class
  int LDM::calculateRequiredMeteoFiles();
           ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(24): error: member function "LDM::loadSingleMeteoFile" may not be redeclared outside its class
  void LDM::loadSingleMeteoFile();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(25): error: member function "LDM::preloadAllEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::preloadAllEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../data/meteo/ldm_mdata_cache.cuh(26): error: member function "LDM::cleanupEKIMeteorologicalData" may not be redeclared outside its class
  void LDM::cleanupEKIMeteorologicalData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(23): error: member function "LDM::runSimulation" may not be redeclared outside its class
  void LDM::runSimulation();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(28): error: member function "LDM::runSimulation_eki" may not be redeclared outside its class
  void LDM::runSimulation_eki();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_simulation.cuh(33): error: member function "LDM::runSimulation_eki_dump" may not be redeclared outside its class
  void LDM::runSimulation_eki_dump();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(23): error: member function "LDM::allocateGPUMemory" may not be redeclared outside its class
  void LDM::allocateGPUMemory();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(28): error: member function "LDM::checkParticleNaN" may not be redeclared outside its class
  void LDM::checkParticleNaN(const std::string& location, int max_check = 10);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_particle.cuh(33): error: member function "LDM::checkMeteoDataNaN" may not be redeclared outside its class
  void LDM::checkMeteoDataNaN(const std::string& location);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(23): error: member function "LDM::startTimer" may not be redeclared outside its class
  void LDM::startTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(28): error: member function "LDM::stopTimer" may not be redeclared outside its class
  void LDM::stopTimer();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(33): error: member function "LDM::initializeEKIObservationSystem" may not be redeclared outside its class
  void LDM::initializeEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(38): error: member function "LDM::computeReceptorObservations" may not be redeclared outside its class
  void LDM::computeReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(43): error: member function "LDM::saveEKIObservationResults" may not be redeclared outside its class
  void LDM::saveEKIObservationResults();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(48): error: member function "LDM::writeEKIObservationsToSharedMemory" may not be redeclared outside its class
  bool LDM::writeEKIObservationsToSharedMemory(void* writer_ptr);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(53): error: member function "LDM::computeReceptorObservations_AllEnsembles" may not be redeclared outside its class
  void LDM::computeReceptorObservations_AllEnsembles(int timestep, float currentTime, int num_ensembles, int num_timesteps);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(58): error: member function "LDM::cleanupEKIObservationSystem" may not be redeclared outside its class
  void LDM::cleanupEKIObservationSystem();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(63): error: member function "LDM::resetEKIObservationSystemForNewIteration" may not be redeclared outside its class
  void LDM::resetEKIObservationSystemForNewIteration();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(68): error: member function "LDM::computeGridReceptorObservations" may not be redeclared outside its class
  void LDM::computeGridReceptorObservations(int timestep, float currentTime);
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(73): error: member function "LDM::saveGridReceptorData" may not be redeclared outside its class
  void LDM::saveGridReceptorData();
            ^

./src/kernels/eki/../../include/../simulation/ldm_func_output.cuh(78): error: member function "LDM::cleanupGridReceptorSystem" may not be redeclared outside its class
  void LDM::cleanupGridReceptorSystem();
            ^

make: *** [Makefile:122: objectfiles/src/visualization/ldm_plot_vtk.o] Error 2
make: *** [Makefile:122: objectfiles/src/core/ldm.o] Error 2
make: *** [Makefile:122: objectfiles/src/ipc/ldm_eki_writer.o] Error 2
make: *** [Makefile:122: objectfiles/src/simulation/ldm_func_simulation.o] Error 2
94 errors detected in the compilation of "src/main_eki.cu".
make: *** [Makefile:122: objectfiles/src/visualization/ldm_plot_utils.o] Error 2
make: *** [Makefile:122: objectfiles/src/data/meteo/ldm_mdata_cache.o] Error 2
93 errors detected in the compilation of "src/init/ldm_init_particles.cu".
make: *** [Makefile:122: objectfiles/src/main_eki.o] Error 2
make: *** [Makefile:122: objectfiles/src/init/ldm_init_particles.o] Error 2
