################################################################################
#                    ENSEMBLE KALMAN INVERSION CONFIGURATION
################################################################################
# This file configures the Ensemble Kalman Inversion (EKI) algorithm for
# atmospheric source term estimation.
#
# EKI is an inverse modeling technique that optimizes emission time series
# by assimilating receptor observations through ensemble-based covariance.
#
# Units are specified in parentheses for each parameter.
# Boolean flags: On/Off
################################################################################

# ==============================================================================
# TEMPORAL SETTINGS
# ==============================================================================
# Defines the time resolution for emission time series

# Time interval between emission values (float)
# This determines how often emission rates can change
# Finer intervals = more degrees of freedom = harder inverse problem
EKI_TIME_INTERVAL: 15.0

# Unit for time interval
# Options: seconds, minutes, hours
# Example: 15.0 minutes = emit a value every 15 minutes
EKI_TIME_UNIT: minutes

# ==============================================================================
# TRUE EMISSIONS (Reference/Validation)
# ==============================================================================
# The "true" emission time series used for reference simulation
# In real-world applications, this is unknown (what we're trying to find)
# In synthetic tests, this is known and used to validate EKI performance
#
# Units: Becquerels (Bq) per time interval
# Format: One value per line, representing emission rate at each time step
#
# Number of values should match: simulation_duration / time_interval
# Example: 6 hours / 15 minutes = 24 time steps
#
# Pattern design tips:
#   - Constant: easiest for EKI convergence
#   - Single peak: medium difficulty
#   - Multiple peaks: challenging
#   - Late peak: hardest (limited downwind observations)
TRUE_EMISSION_SERIES:
1.90387731e+13
1.90387731e+13
1.90387731e+12
1.90387731e+11
1.90387731e+4
1.90387731e+3
1.90387731e+2
1.90387731e+1
2.26641204e+13
2.26641204e+13
2.26641204e+12
2.26641204e+11
2.26641204e+4
2.26641204e+3
2.26641204e+2
2.26641204e+1
1.51170139e+13
1.51170139e+13
1.51170139e+12
1.51170139e+11
1.51170139e+4
1.51170139e+3
1.51170139e+2
1.51170139e+1

# ==============================================================================
# PRIOR EMISSIONS (Initial Guess)
# ==============================================================================
# The initial guess for emission time series before EKI optimization
# EKI will iteratively refine this guess to match receptor observations
#
# Two modes available:

# Mode selection: "constant" or "series"
# - constant: All time steps use same emission rate (simpler, recommended)
# - series: Specify different rate for each time step (more flexible)
PRIOR_EMISSION_MODE: constant

# Constant mode: single emission rate for all time steps (Bq)
# This value is used when PRIOR_EMISSION_MODE = constant
# Recommended: Use order-of-magnitude estimate from preliminary analysis
# Example: 1.0e+12 Bq = 1 TBq (typical for regional nuclear release)
PRIOR_EMISSION_CONSTANT: 1.0e+12

# Series mode: individual emission rates per time step (Bq)
# Uncomment and fill in when PRIOR_EMISSION_MODE = series
# Must have same number of values as TRUE_EMISSION_SERIES
# PRIOR_EMISSION_SERIES:
# 1.5e+8
# 1.5e+8
# ... (24 values for 6-hour simulation with 15-min intervals)

# ==============================================================================
# ENSEMBLE KALMAN INVERSION ALGORITHM
# ==============================================================================
# Controls the EKI optimization process

# Number of ensemble members
# Each member represents a perturbed version of the state vector
# More members = better covariance estimation = better convergence
# But also more computational cost (linear scaling)
#
# Recommended values:
#   - Minimum: 50 (for stable covariance)
#   - Typical: 100-200 (good balance)
#   - High accuracy: 500-1000 (expensive)
#
# Rule of thumb: ensemble_size >= 2 * num_state_variables
# Example: 24 time steps â†’ need at least 50 members
EKI_ENSEMBLE_SIZE: 100

# Observation noise level (fraction)
# Artificial noise added to synthetic observations to represent uncertainty
# This prevents overfitting and stabilizes the inversion
#
# Physical interpretation:
#   0.0 = perfect observations (no uncertainty)
#   0.1 = 10% relative error (typical for gamma dose rate)
#   0.5 = 50% relative error (very uncertain measurements)
#
# Recommended: 0.05 - 0.20 for realistic scenarios
EKI_NOISE_LEVEL: 0.1

# Maximum number of EKI iterations
# Each iteration refines the ensemble by assimilating observations
# More iterations = potentially better convergence, but diminishing returns
#
# Typical behavior:
#   - Well-posed problems: converge in 3-10 iterations
#   - Ill-posed problems: may need 20-50 iterations
#   - Beyond 100 iterations usually indicates fundamental issues
#
# Recommended: Start with 5-10, increase if not converged
EKI_ITERATION: 3

# --------------------
# Advanced EKI Options
# --------------------
# These modify the basic EnKF algorithm for special cases

# Ensemble perturbation at each iteration
# On = Add random noise to ensemble (helps exploration)
# Off = No perturbation (standard EKI)
# Recommended: Off (unless dealing with model error)
EKI_PERTURB_OPTION: Off

# Adaptive step size control
# On = Automatically adjust Kalman gain for stability
# Off = Use standard fixed gain
# Use when: Inversion is diverging or oscillating
EKI_ADAPTIVE: Off

# Covariance localization
# On = Remove spurious long-range correlations
# Off = Use full covariance matrix
# Use when: ensemble_size < num_state_variables (underdetermined)
EKI_LOCALIZED: Off

# Tikhonov regularization
# On = Add penalty term to prevent overfitting
# Off = No regularization
# Use when: Problem is ill-posed or underdetermined
EKI_REGULARIZATION: Off

# Regularization strength (only used if REGULARIZATION = On)
# Larger values = stronger smoothing = less overfitting
# Typical range: 0.1 - 0.99
# 0.9 = strong regularization (prefer smooth solutions)
EKI_RENKF_LAMBDA: 0.9

# ==============================================================================
# DEBUGGING
# ==============================================================================

# Memory Doctor Mode (IPC debugging tool)
# On = Log all data transfers between C++ and Python to /tmp/eki_debug/
# Off = Normal operation (no debug logging)
#
# Use when:
#   - Suspecting data corruption in shared memory
#   - Ensemble values look wrong
#   - Python crashes with cryptic errors
#
# Performance impact: Moderate (lots of file I/O)
# Recommended: Off (enable only when debugging IPC issues)
MEMORY_DOCTOR_MODE: Off

################################################################################
# End of eki.conf
################################################################################
